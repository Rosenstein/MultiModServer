// Veronika

/* CVARS - copy and paste to shconfig.cfg

 //Veronika
 veronika_level 8
 veronika_akmulti 2.0			//Damage multiplyer for his ak47
 veronika_grenades 5				//Grenades given
 veronika_m203rad 200
 veronika_m203dmg 120
 */

// Thanx to the original code of MP5+203 Mod by PaintLancer

#include <amxmodx>
#include <fakemeta>
#include <engine>
#include <cstrike>
#include <Vexd_Utilities>
#include <superheromod>

// VARIABLES
new gHeroName[]="Veronika"
new gHasVeronikaPower[SH_MAXSLOTS+1]
new g_ammo[33]
new g_m203_loaded[33]

//sprites
new m_iTrail
new xplode

#define ICON_HIDE 0
#define ICON_SHOW 1
#define TE_BEAMFOLLOW 22

new gmsgDeathMsg
new gMsgID
//----------------------------------------------------------------------------------------------
public plugin_init()
{   
    // Plugin Info
    register_plugin("SUPERHERO Veronika","1.3","DuPeR/Yang")

    // DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
    register_cvar("veronika_level", "8")
    register_cvar("veronika_akmulti", "2")
    //register_cvar("veronika_crazynade","0") //makes nades bounce off all walls with perfect elasticity until it hits an entity or player...can get crazy
    register_cvar("veronika_m203conc","10.0")//force of knockback
    register_cvar("veronika_m203trail","1")//nade trails
    register_cvar("veronika_m203rad","200")//radius of dmg
    register_cvar("veronika_m203dmg","75")//dmg
    register_cvar("veronika_grenades","5")//cool down period b4 gets another one
    
    // FIRE THE EVENT TO CREATE THIS SUPERHERO!
    shCreateHero(gHeroName, "Resident Evil", "AK Grenade Launcher Right Mouse Button.", false, "veronika_level" )

    // REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
    
    // INIT
    register_srvcmd("veronika_init", "veronika_init")
    shRegHeroInit(gHeroName, "veronika_init")

    register_event("DeathMsg","death","a")
    register_event("ResetHUD", "newSpawn","b")
    register_event("CurWeapon", "weaponChange","be","1=1")
    register_event("Damage", "veronika_damage","b","2!0")

    //handle when player presses attack2
    register_forward(FM_PlayerPreThink, "forward_playerprethink")

    // handle world model
    register_forward(FM_SetModel, "forward_setmodel")

    // Let Server know about Lara's Variable
    shSetShieldRestrict(gHeroName)

    gmsgDeathMsg = get_user_msgid("DeathMsg")
    gMsgID = get_user_msgid("StatusIcon")
}
//----------------------------------------------------------------------------------------------
public plugin_precache()
{   
    precache_model("models/shmod/ak47grenade.mdl")
    precache_model("models/p_9mmar.mdl")
    precache_model("models/w_9mmar.mdl")
    precache_model("models/grenade.mdl")
    precache_sound("shmod/glauncher.wav")
    precache_sound("shmod/a_exm2.wav")

    m_iTrail = precache_model("sprites/smoke.spr")
    xplode = precache_model("sprites/shmod/zerogxplode2.spr")
}

//----------------------------------------------------------------------------------------------
public veronika_init()
{   
    // First Argument is an id
    new temp[6]
    read_argv(1,temp,5)
    new id=str_to_num(temp)

    // 2nd Argument is 0 or 1 depending on whether the id has the hero
    read_argv(2,temp,5)
    new hasPowers = str_to_num(temp)

    gHasVeronikaPower[id] = (hasPowers != 0)

    //Reset thier shield restrict status
    //Shield restrict MUST be before weapons are given out
    shResetShield(id)

    g_ammo[id] = get_cvar_num("veronika_grenades")
    g_m203_loaded[id] = 1

    if ( !is_user_alive(id) ) return

    if ( gHasVeronikaPower[id] )
    {   
        veronika_weapons(id)
        switchmodel(id)
    }
    else
    {   
        engclient_cmd(id,"drop","weapon_ak47")
    }
}
//----------------------------------------------------------------------------------------------
public newSpawn(id)
{   
    if ( gHasVeronikaPower[id] && is_user_alive(id) && shModActive() )
    {   
        set_task(0.1, "veronika_weapons", id)
        g_ammo[id] = get_cvar_num("veronika_grenades")
        new clip, ammo, wpnid = get_user_weapon(id,clip,ammo)
        if (wpnid != CSW_AK47 && wpnid > 0)
        {   
            new wpn[32]
            get_weaponname(wpnid,wpn,31)
            engclient_cmd(id,wpn)
        }
    }
    new grenada = find_ent_by_class(-1, "m203_nade")
    while(grenada)
    {   
        remove_entity(grenada)
        grenada = find_ent_by_class(grenada, "m203_nade")
    }
}
//----------------------------------------------------------------------------------------------
public veronika_weapons(id)
{   
    if ( is_user_alive(id) && shModActive() )
    {   
        shGiveWeapon(id,"weapon_ak47")
    }
}
//----------------------------------------------------------------------------------------------
public switchmodel(id)
{   
    if ( !is_user_alive(id) || !gHasVeronikaPower[id] ) return
    new clip, ammo, wpnid = get_user_weapon(id,clip,ammo)
    if (wpnid == CSW_AK47)
    {   
        // Weapon Model change thanks to [CCC]Taz-Devil
        Entvars_Set_String(id, EV_SZ_viewmodel, "models/shmod/ak47grenade.mdl")
    }
}
//----------------------------------------------------------------------------------------------
public weaponChange(id)
{   
    if ( !gHasVeronikaPower[id] || !shModActive() ) return

    new wpnid = read_data(2)
    new clip = read_data(3)

    if ( wpnid != CSW_AK47 ) return

    switchmodel(id)

    // Never Run Out of Ammo!
    if ( clip == 0 )
    {   
        shReloadAmmo(id)
    }
}
//----------------------------------------------------------------------------------------------
public veronika_damage(id)
{   
    if (!shModActive() || !is_user_alive(id)) return

    new damage = read_data(2)
    new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
    new headshot = bodypart == 1 ? 1 : 0

    if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return

    if ( gHasVeronikaPower[attacker] && weapon == CSW_AK47 && is_user_alive(id) )
    {   
        // do extra damage
        new extraDamage = floatround(damage * get_cvar_float("veronika_akmulti") - damage)
        if (extraDamage > 0) shExtraDamage( id, attacker, extraDamage, "AK47+M203", headshot )
    }
}
//----------------------------------------------------------------------------------------------
public forward_playerprethink(id)
{   
    if(is_user_alive(id))
    {   
        new clip, ammo, wpnid = get_user_weapon(id,clip,ammo)
        if (entity_get_int(id, EV_INT_button) & IN_ATTACK2 && wpnid == CSW_AK47 && gHasVeronikaPower[id] )
        {   
            launch_nade(id)
            return FMRES_IGNORED
        }
    }
    return FMRES_IGNORED
}

public launch_nade(id)
{   
    if( !gHasVeronikaPower[id] || !(is_user_alive(id)) || g_m203_loaded[id] == 0 )
    return PLUGIN_CONTINUE

    if(g_ammo[id] == 0)
    {   
        client_print(id, print_center, "You are out of m203 grenades!")
        return PLUGIN_CONTINUE
    }

    entity_set_int(id, EV_INT_weaponanim, 3)

    new Float: Origin[3], Float: Velocity[3], Float: vAngle[3], Ent

    entity_get_vector(id, EV_VEC_origin , Origin)
    entity_get_vector(id, EV_VEC_v_angle, vAngle)

    //client_print(id, print_center, "Origin: %f-%f-%f", Origin[0], Origin[1], Origin[2])
    //client_print(id, print_center, "vAngle: %f-%f-%f", vAngle[0], vAngle[1], vAngle[2])
    
    Origin[2] = Origin[2] + 10

    Ent = create_entity("info_target")

    if (!Ent) return PLUGIN_HANDLED

    entity_set_string(Ent, EV_SZ_classname, "m203_nade")
    entity_set_model(Ent, "models/grenade.mdl")

    new Float:MinBox[3] =
    {   -1.0, -1.0, -1.0}
    new Float:MaxBox[3] =
    {   1.0, 1.0, 1.0}
    entity_set_vector(Ent, EV_VEC_mins, MinBox)
    entity_set_vector(Ent, EV_VEC_maxs, MaxBox)

    entity_set_origin(Ent, Origin)
    entity_set_vector(Ent, EV_VEC_angles, vAngle)

    entity_set_int(Ent, EV_INT_effects, 2)
    entity_set_int(Ent, EV_INT_solid, 1)
    entity_set_int(Ent, EV_INT_movetype, 10)
    entity_set_edict(Ent, EV_ENT_owner, id)

    VelocityByAim(id, 2000 , Velocity)
    entity_set_vector(Ent, EV_VEC_velocity ,Velocity)

    emit_sound(id,CHAN_VOICE,"shmod/glauncher.wav", 1.0, ATTN_NORM, 0, PITCH_NORM)

    g_m203_loaded[id] = 0

    ammo_hud(id,0)
    g_ammo[id]--
    ammo_hud(id,1)

    new parm[1]
    parm[0] = Ent

    //if(get_cvar_num("veronika_m203trail"))
    set_task(0.2, "grentrail",id,parm,1)

    parm[0] = id
    set_task(2.0, "m203_reload",id+9910,parm,1)

    return PLUGIN_CONTINUE
}

public m203_reload(parm[])
{   
    g_m203_loaded[parm[0]] = 1
}

public vexd_pfntouch(pToucher, pTouched)
{   

    if (pToucher <= 0) return
    if (!is_valid_ent(pToucher)) return

    new szClassName[32]
    entity_get_string(pToucher, EV_SZ_classname, szClassName, 31)
    if(equal(szClassName, "m203_nade"))
    {   
        new damradius = get_cvar_num("veronika_m203rad") //200
        new maxdamage = get_cvar_num("veronika_m203dmg")//70
        
        new tkill = 0
        new Float:fl_vExplodeAt[3]
        entity_get_vector(pToucher, EV_VEC_origin, fl_vExplodeAt)
        new vExplodeAt[3]
        vExplodeAt[0] = floatround(fl_vExplodeAt[0])
        vExplodeAt[1] = floatround(fl_vExplodeAt[1])
        vExplodeAt[2] = floatround(fl_vExplodeAt[2])
        new oid = entity_get_edict(pToucher, EV_ENT_owner)
        new origin[3],dist,i,Float:dRatio,damage

        for ( i = 0; i < 32; i++)
        {   
            if((is_user_alive(i)))
            {   
                get_user_origin(i,origin)
                dist = get_distance(origin,vExplodeAt)
                if (dist <= damradius)
                {   
                    dRatio = floatdiv(float(dist),float(damradius))
                    damage = maxdamage - floatround(floatmul(float(maxdamage),dRatio))

                    set_velocity_from_origin(i, fl_vExplodeAt, get_cvar_float("veronika_m203conc")*damage) // ThantiK's he-conc function - tried getting it to recognize m203 nades but failed so imported function
                    
                    if(cvar_exists("mp_friendlyfire"))
                    {   
                        if(i == oid)
                        do_victim(i, oid, damage, 2)
                        else if( get_cvar_num("mp_friendlyfire"))
                        {   
                            if(get_user_team(i) == get_user_team(oid)) tkill = 1
                            do_victim(i,oid,damage,tkill)
                        }
                        else
                        {   
                            if(get_user_team(i) != get_user_team(oid))
                            {   
                                do_victim(i,oid,damage,0)
                            }
                        }
                    }
                    else if(i == oid)
                    do_victim(i, oid, damage, 2)
                    else
                    do_victim(i,oid,damage,0)
                }
            }
        }

        message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
        write_byte(17)
        write_coord(vExplodeAt[0])
        write_coord(vExplodeAt[1])
        write_coord(vExplodeAt[2] + 60)
        write_short(xplode)
        write_byte(20)
        write_byte(200)
        message_end()

        emit_sound(pToucher, CHAN_WEAPON, "shmod/a_exm2.wav", VOL_NORM, ATTN_NORM, 0, PITCH_NORM)

        remove_entity(pToucher)
    }
}

do_victim(victim,attacker,damage,tk)
{   
    new namek[32],namev[32],authida[35],authidv[35],teama[32],teamv[32]
    get_user_name(victim,namev,31)
    get_user_name(attacker,namek,31)
    get_user_authid(victim,authidv,34)
    get_user_authid(attacker,authida,34)
    get_user_team(victim,teamv,31)
    get_user_team(attacker,teama,31)

    new Float:fl_dmg = float(damage)

    if(damage >= get_user_health(victim))
    {   
        set_msg_block(gmsgDeathMsg,BLOCK_SET)
        fakedamage(victim, "grenade", fl_dmg, DMG_BLAST) //user_kill(victim,1)
        set_msg_block(gmsgDeathMsg,BLOCK_NOT)

        if(is_user_alive(victim))//some cases where damage is messed with WC3? then return
        return

        message_begin(MSG_ALL, get_user_msgid("DeathMsg"),
                {   0,0,0}, 0)
        write_byte(attacker)
        write_byte(victim)
        write_byte(0)
        write_string("grenade")
        message_end()

        if(tk == 1)
        {   
            client_print(attacker,print_center,"You killed a teammate")
            set_user_frags(attacker,get_user_frags(attacker) - 1 )
            set_user_frags(victim, get_user_frags(victim) + 1)
            log_message("^"%s<%d><%s><%s>^" killed ^"%s<%d><%s><%s>^" with ^"grenade^"",
                    namek,get_user_userid(attacker),authida,teama,namev,get_user_userid(victim),authidv,teamv)
        }
        else if(tk == 2)
        {   
            log_message("^"%s<%d><%s><%s>^" killed self with ^"grenade^"",
                    namek,get_user_userid(attacker),authida,teama)
        }
        else
        {   
            new money = cs_get_user_money(attacker)
            cs_set_user_money(attacker, money + 300) // award for kill
            
            set_user_frags(attacker,get_user_frags(attacker) + 1 )
            //set_user_frags(attacker,get_user_frags(victim) + 1 )
            log_message("^"%s<%d><%s><%s>^" killed ^"%s<%d><%s><%s>^" with ^"grenade^"",
                    namek,get_user_userid(attacker),authida,teama,namev,get_user_userid(victim),authidv,teamv)
        }
    }
    else
    {   
        fakedamage(victim, "grenade", fl_dmg, DMG_BLAST) //set_user_health(victim,get_user_health(victim) - damage )
        
        if(tk == 1)
        {   
            client_print(0,print_chat,"%s attacked a teammate",namek)
        }
    }
}

ammo_hud(id, sw)
{   
    new s_sprite[33]
    format(s_sprite,32,"number_%d",g_ammo[id])

    if(sw)
    {   
        message_begin( MSG_ONE, gMsgID,
                {   0,0,0}, id )
        write_byte( ICON_SHOW ) // status
        write_string( s_sprite )// sprite name
        write_byte( 0 )// red
        write_byte( 160 )// green
        write_byte( 0 )// blue
        message_end()
    }
    else
    {   
        message_begin( MSG_ONE, gMsgID,
                {   0,0,0}, id )
        write_byte( ICON_HIDE ) // status
        write_string( s_sprite )// sprite name
        write_byte( 0 )// red
        write_byte( 160 )// green
        write_byte( 0 )// blue
        message_end()
    }
}

/////////////////////
//Thantik's he-conc functions
stock get_velocity_from_origin( ent, Float:fOrigin[3], Float:fSpeed, Float:fVelocity[3] )
{   
    new Float:fEntOrigin[3];
    entity_get_vector( ent, EV_VEC_origin, fEntOrigin );

    // Velocity = Distance / Time
    
    new Float:fDistance[3];
    fDistance[0] = fEntOrigin[0] - fOrigin[0];
    fDistance[1] = fEntOrigin[1] - fOrigin[1];
    fDistance[2] = fEntOrigin[2] - fOrigin[2];

    new Float:fTime = ( vector_distance( fEntOrigin,fOrigin ) / fSpeed );

    fVelocity[0] = fDistance[0] / fTime;
    fVelocity[1] = fDistance[1] / fTime;
    fVelocity[2] = fDistance[2] / fTime;

    return ( fVelocity[0] && fVelocity[1] && fVelocity[2] );
}

// Sets velocity of an entity (ent) away from origin with speed (speed)

stock set_velocity_from_origin( ent, Float:fOrigin[3], Float:fSpeed )
{   
    new Float:fVelocity[3];
    get_velocity_from_origin( ent, fOrigin, fSpeed, fVelocity )

    entity_set_vector( ent, EV_VEC_velocity, fVelocity );

    return ( 1 );
}

public grentrail(parm[])
{   
    new gid = parm[0]

    if (gid)
    {   
        message_begin( MSG_BROADCAST, SVC_TEMPENTITY )
        write_byte( TE_BEAMFOLLOW )
        write_short(gid) // entity
        write_short(m_iTrail)// model
        write_byte( 10 )// life
        write_byte( 5 )// width
        write_byte( 255 )// r, g, b
        write_byte( 255 )// r, g, b
        write_byte( 255 )// r, g, b
        write_byte( 100 )// brightness
        
        message_end()// move PHS/PVS data sending into here (SEND_ALL, SEND_PVS, SEND_PHS)
    }
}

public forward_setmodel(entity, model[])
{   
    if (!is_valid_ent(entity))
    {   
        return FMRES_IGNORED
    }

    if (equal(model, "models/shmod/ak47grenade.mdl"))
    {   
        new classname[11]
        entity_get_string(entity, EV_SZ_classname, classname, 10)

        //client_print(0, print_chat, "Model: %s Classname: %s", model, classname)
        
        if (equal(classname, "weaponbox"))
        {   
            //client_print(0, print_chat, "Setting model")
            
            entity_set_model(entity, "models/w_9mmar.mdl")

            return FMRES_SUPERCEDE
        }
    }

    return FMRES_IGNORED
}

public client_connect(id)
{   
    g_m203_loaded[id] = 1
}

public death(id)
{   
    if ( gHasVeronikaPower[id] )
    {   
        ammo_hud(id,0)
    }
}