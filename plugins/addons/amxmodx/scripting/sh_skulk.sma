// ALIEN! - from the Alien movie series.

/* CVARS - copy and paste to shconfig.cfg

//Skulk
skulk_level 5
skulk_health 125		//Default 125
skulk_armor 125		//Default 125
skulk_alpha 20
*/

/*
*
*   Hero Created by DuPeR aka Rockell
*/

#include <amxmod>
#include <superheromod>
#include <vexd_utilities>
#include <fun>

// VARIABLES
new gHeroName[]="Skulk"
new gHasSkulkPower[SH_MAXSLOTS+1]
new chamber[32]
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Skulk", "1.2", "Rockell / DuPeR")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("skulk_level", "5")
	register_cvar("skulk_health", "125")
	register_cvar("skulk_armor", "125")
	register_cvar("skulk_alpha", "20")
	
	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	shCreateHero(gHeroName, "Bite Them", "Random Chance of Devouring Other Player", false, "skulk_level")

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// INIT
	register_srvcmd("skulk_init", "skulk_init")
	shRegHeroInit(gHeroName, "skulk_init")

	register_event("ResetHUD", "newSpawn", "b")
	register_event("CurWeapon", "weaponChange", "be", "1=1")
	register_event("DeathMsg", "skulk_death", "a")
	
	register_touch("player","chamber","touched")

	// EXTRA KNIFE DAMAGE
	register_event("Damage", "skulk_damage", "b", "2!0")

	// Let Server know about Alien's Variables
	shSetMaxHealth(gHeroName, "skulk_health")
	shSetMaxArmor(gHeroName, "skulk_armor")


}
//----------------------------------------------------------------------------------------------
public skulk_init()
{
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id=str_to_num(temp)

	// 2nd Argument is 0 or 1 depending on whether the id has Alien
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)

	gHasSkulkPower[id] = (hasPowers != 0)

	if ( is_user_connected(id) ) {
		if ( gHasSkulkPower[id] ) {
			weaponChange(id)
		}
		if ( !gHasSkulkPower[id] ) {
			shRemHealthPower(id)
			shRemArmorPower(id)
		}
	}
}
//----------------------------------------------------------------------------------------------
public plugin_precache()
{
	precache_model("models/shmod/v_lvl1.mdl")
}
//----------------------------------------------------------------------------------------------
public newSpawn(id)
{
	if ( gHasSkulkPower[id] && is_user_alive(id)  && shModActive() ) {
		remove_entity(chamber[id])
	}
}
//----------------------------------------------------------------------------------------------
public weaponChange(id)
{
	if ( !gHasSkulkPower[id] || !shModActive() ) return

	new wpnid = read_data(2)

	if ( wpnid == CSW_KNIFE ) {
	 new gAlphaInvis = get_cvar_num("skulk_alpha")
	 set_user_rendering(id, kRenderFxGlowShell, 0, 0, 0, kRenderTransAlpha, gAlphaInvis)
	 switchmodel(id)
	 }
	if ( wpnid != CSW_KNIFE ) {
	set_user_rendering(id)
	}
}
//----------------------------------------------------------------------------------------------
public skulk_damage(id)
{
	if (!shModActive() || !is_user_alive(id)) return

	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)

	if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return

	if ( gHasSkulkPower[attacker] && weapon == CSW_KNIFE && is_user_alive(id) ) {
		if(random_num(1,5) == random_num(1,5) )
		{
		// Instant Kill
		shExtraDamage( id, attacker, 9999, "eating")
		}
	}
}
//----------------------------------------------------------------------------------------------
public skulk_death()
{
	new id = read_data(2)
	
	if ( !gHasSkulkPower[id] ) return
		
}

//----------------------------------------------------------------------------------------------
public switchmodel(id)
{
	if ( !is_user_alive(id) || !gHasSkulkPower[id] ) return
	new clip, ammo, wpnid = get_user_weapon(id,clip,ammo)
	if (wpnid == CSW_KNIFE) {
		// Weapon Model change thanks to [CCC]Taz-Devil
		Entvars_Set_String(id, EV_SZ_viewmodel, "models/shmod/v_lvl1.mdl")
	}
}
//----------------------------------------------------------------------------------------------