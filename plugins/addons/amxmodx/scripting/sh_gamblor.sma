/******************************************************************************
*   SuperHero Gamblor
*
*   Made for use with SuperHero Mod
*   http://shero.rocks-hideout.com
*
*******************************************************************************
*
*   Version 1.4c
*
*   Coded and created by Prowler
*
*   ****REMEMBER, if you use anyones code GIVE CREDIT WHERE CREDIT IS DUE!*****
*
*   Credits:
*
*    RVS
*    For his role the dice plugin which is the inspiration for this hero
*
*    {HOJ} Batman
*    For his Excellent heros which helped me with the coding of this hero
*
*    AssKicR
*    For his Excellent heros which have been an inspiration and a guide
*
*    JTP10181
*    For his continued support with Superhero Mod, and his Hero modifications
*
*    Freecode
*    For his Excellent Heros which provided both a guideline and
*    helpful Tequniques
*
*    The ENTIRE Superhero Team
*    For making such a Kick ass Plugin
*
*    EGN Games network
*    For their Server and support and getting me addicted to SuperHeroes
*    in the first place
*
*    Optik
*    For his continued patience, support and time Poured into the
*    EGN network and for Putting up with me and my continued requests :)
*
*    EGN CS 3 WA Server Regulars
*    A special thanks to them, for testing and exploiting the hero for
*    all it was worth which aided me in improving and refining him :)
*
******************************************************************************
* Gamblor
*
*  Description:
*
*   Gamblor was a pet project of mine that I have spent many sleepless nights
*   working on, continually being modified and updated as i get inspired to
*   add or change something. The basic idea of Gamblor is to create a hero
*   that is entierly random (well, computer generated random). On key down
*   giving you a Benifit that could let you win the game single handledly,
*   or kill you instantly, and many other things inbetween.
*
*  Cvars:
*   gamblor_cooldown - Default 30
*   gamblor_level - Default 8
*
*   Cvars are minimal due to the HUGE amount of Cvars that could be added
*
*                    ******** AMX Module REQUIRED ********
*                    ******** FUN Module REQUIRED ********
*                   ******* Monster Module REQUIRED ********
*                   ******** VexdUM Module REQUIRED ********
*                  ******** SuperHero Module REQUIRED ********
*
******************************************************************************/
//------------------------***INCLUDES***-----------------
#include <amxmod>
#include <amxmisc>
#include <superheromod>
#include <Vexd_Utilities>
#if defined AMXX_VERSION
  #include <cstrike>
#endif

//------------------------***Model & Sprite***-----------
new mdl_gib_flesh
new mdl_gib_head
new mdl_gib_legbone
new mdl_gib_lung
new mdl_gib_meat
new mdl_gib_spine
new spr_blood_drop
new spr_blood_spray
//------------------------***DEFINITIONS***--------------
#define TE_MODEL      106
#define TE_WORLDDECAL   116
#define TE_BLOODSPRITE   115
#define AMMOX_HEGRENADE 12
//------------------------***VARIABLES***----------------
new gHeroName[]="Gamblor"
new gHasGamblorPower[SH_MAXSLOTS+1]
new light
new smoke
new white
new fire
new Float:ejl_ff
new IsBomb[33]
new IsKamik[33]
new g_gamblorSound[]="ambience/disgusting.wav"
new gPoisonPoints
new g_isPoisoned[33][33]
new gmsgDamage
new Stalker[SH_MAXSLOTS+1]
//------------------------***BOOLEANS***-----------------
new bool:rs = false
new bool: extrgren[33]
new bool: GamHeal[33]
new bool:g_morphed[SH_MAXSLOTS+1]
new dice1[33] = 0
new dice2[33] = 0
new dice3[33] = 0
new dice4[33] = 0
new dice5[33] = 0
new dice6[33] = 0
new dice7[33] = 0
new dice8[33] = 0
new dice9[33] = 0
new dice10[33] = 0
new dice11[33] = 0
new dice12[33] = 0
new dice13[33] = 0
new dice14[33] = 0
new dice15[33] = 0
new dice16[33] = 0
new dice17[33] = 0
new dice18[33] = 0
new dice19[33] = 0
new dice20[33] = 0
new dice21[33] = 0
new dice22[33] = 0
new dice23[33] = 0
new dice24[33] = 0
new dice25[33] = 0
/****************************************************************************
**************************      Plugin Inizilization      *******************
*****************************************************************************/
public plugin_init()
{
  // Plugin Info
  register_plugin("SUPERHERO Gamblor","1.4c","Prowler")

  // DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
  register_cvar("gamblor_cooldown", "30" )
  register_cvar("gamblor_level", "8" )

    // FIRE THE EVENT TO CREATE THIS SUPERHERO!
  debugMessage("Attempting to create Gamblor Hero")
  shCreateHero(gHeroName, "Roll the Dice!", "Take a chance for a benifit or disadvantage!", true, "gamblor_level" )

  // REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
  set_task(1.0,"timebomb_timer",0,"",0,"b")
  // INIT
  register_srvcmd("gamblor_init", "gamblor_init")
  shRegHeroInit(gHeroName, "gamblor_init")
  register_event("Damage", "Gamblor_DAMAGE", "b", "2!0")
  // KEY UP
  register_srvcmd("gamblor_kd",   "gamblor_kd")
  shRegKeyDown(gHeroName, "gamblor_kd")

  register_event( "AmmoX", "on_AmmoX", "b" )
  register_event("ResetHUD","new_round","b")

}
/**************************************************************************
**************************      Gamblor Inizilization      ****************
**************************************************************************/
public gamblor_init()
{
  new temp[6]
  // First Argument is an id
  read_argv(1,temp,5)
  new id=str_to_num(temp)

  // 2nd Argument is 0 or 1 depending on whether the id has flash
  read_argv(2,temp,5)
  new hasPowers=str_to_num(temp)
  gHasGamblorPower[id]=(hasPowers!=0)

  if ( hasPowers )
    gHasGamblorPower[id] = true
  else
    gHasGamblorPower[id] = false

  if ( !hasPowers ) {
    if (is_user_connected(id)) set_user_rendering(id,kRenderFxGlowShell,0,0,0,kRenderTransAlpha,255)
    set_user_hitzones(id,0,255)
    shRemHealthPower(id)
    shRemArmorPower(id)
    gamblor_unmorph(id)
    if (is_user_connected(id)) set_user_noclip(id,0)
    GamHeal[id]=false
    extrgren[id]=false
    dice1[id] = 0
    dice2[id] = 0
    dice3[id] = 0
    dice4[id] = 0
    dice5[id] = 0
    dice6[id] = 0
    dice7[id] = 0
    dice8[id] = 0
    dice9[id] = 0
    dice10[id] = 0
    dice11[id] = 0
    dice12[id] = 0
    dice13[id] = 0
    dice14[id] = 0
    dice15[id] = 0
    dice16[id] = 0
    dice17[id] = 0
    dice18[id] = 0
    dice19[id] = 0
    dice20[id] = 0
    dice21[id] = 0
    dice22[id] = 0
    dice23[id] = 0
    dice24[id] = 0
    dice25[id] = 0
  }
}
//-------------------------------------***Sound***-----------------------------
public gamblor_sound(id)
{
  emit_sound(id, CHAN_AUTO, g_gamblorSound, 0.2, ATTN_NORM, 0, PITCH_NORM)
  emit_sound(id, CHAN_AUTO, g_gamblorSound, 0.2, ATTN_NORM, 0, PITCH_NORM)
}
//-------------------------------------***UnMorph Event***---------------------
public gamblor_unmorph(id)
{
  if ( g_morphed[id] )
  {
    set_hudmessage(200, 200, 0, 0.35, 0.45, 2, 0.02, 2.0, 0.01, 0.1, 2)
    show_hudmessage(id,"Gamblor - RETURED TO SELF")
    #if defined AMXX_VERSION
      cs_reset_user_model(id)
    #else
      CS_ClearModel(id)
    #endif
    g_morphed[id]=false
    gamblor_sound(id)
  }
}
//-------------------------------------***Spawn Snarks***----------------------
public summon_monster(id)
{
  server_cmd("monster snark #%i", id)
}
//-------------------------------------***PreChache***-------------------------
public plugin_precache()
{
  spr_blood_drop = precache_model("sprites/blood.spr")
  spr_blood_spray = precache_model("sprites/bloodspray.spr")
  mdl_gib_flesh = precache_model("models/Fleshgibs.mdl")
  mdl_gib_head = precache_model("models/GIB_Skull.mdl")
  mdl_gib_legbone = precache_model("models/GIB_Legbone.mdl")
  mdl_gib_lung = precache_model("models/GIB_Lung.mdl")
  mdl_gib_meat = precache_model("models/GIB_B_Gib.mdl")
  mdl_gib_spine = precache_model("models/GIB_B_Bone.mdl")
  light = precache_model("sprites/lgtning.spr")
  precache_sound( "ambience/thunder_clap.wav")
  precache_sound( "weapons/headshot2.wav")
  smoke = precache_model("sprites/steam1.spr")
  white = precache_model("sprites/white.spr")
  fire = precache_model("sprites/explode1.spr")
  precache_sound( "buttons/blip2.wav")
  precache_sound("ambience/port_suckin1.wav")
  return PLUGIN_CONTINUE
}
//-------------------------------------***Explosion Effects***------------------
new BOMB_FUSE = 10        // fuse time
new BOMBKILL_RANGE = 450  // killing radius of bomb. (96 is playerheight)

explode(vec1[3]){
   // blast circles
   message_begin( MSG_BROADCAST,SVC_TEMPENTITY,vec1)
   write_byte( 21 )
   write_coord(vec1[0])
   write_coord(vec1[1])
   write_coord(vec1[2] + 16)
   write_coord(vec1[0])
   write_coord(vec1[1])
   write_coord(vec1[2] + 1936)
   write_short( white )
   write_byte( 0 ) // startframe
   write_byte( 0 ) // framerate
   write_byte( 2 ) // life 2
   write_byte( 20 ) // width 16
   write_byte( 0 ) // noise
   write_byte( 188 ) // r
   write_byte( 220 ) // g
   write_byte( 255 ) // b
   write_byte( 255 ) //brightness
   write_byte( 0 ) // speed
   message_end()

   //Explosion2
   message_begin( MSG_BROADCAST,SVC_TEMPENTITY)
   write_byte( 12 )
   write_coord(vec1[0])
   write_coord(vec1[1])
   write_coord(vec1[2])
   write_byte( 188 ) // byte (scale in 0.1's) 188
   write_byte( 10 ) // byte (framerate)
   message_end()

   //TE_Explosion
   message_begin( MSG_BROADCAST,SVC_TEMPENTITY,vec1)
   write_byte( 3 )
   write_coord(vec1[0])
   write_coord(vec1[1])
   write_coord(vec1[2])
   write_short( fire )
   write_byte( 60 ) // byte (scale in 0.1's) 188
   write_byte( 10 ) // byte (framerate)
   write_byte( 0 ) // byte flags
   message_end()


   //Smoke
   message_begin( MSG_BROADCAST,SVC_TEMPENTITY,vec1)
   write_byte( 5 ) // 5
   write_coord(vec1[0])
   write_coord(vec1[1])
   write_coord(vec1[2])
   write_short( smoke )
   write_byte( 10 )  // 2
   write_byte( 10 )  // 10
   message_end()

}

blood(vec1[3])
{
   //LAVASPLASH
   message_begin( MSG_BROADCAST,SVC_TEMPENTITY)
   write_byte( 10 )
   write_coord(vec1[0])
   write_coord(vec1[1])
   write_coord(vec1[2])
   message_end()
}

lightning(vec1[3],vec2[3])
{
   //Lightning
   message_begin( MSG_BROADCAST,SVC_TEMPENTITY)
   write_byte( 0 )
   write_coord(vec1[0])
   write_coord(vec1[1])
   write_coord(vec1[2])
   write_coord(vec2[0])
   write_coord(vec2[1])
   write_coord(vec2[2])
   write_short( light )
   write_byte( 1 ) // framestart
   write_byte( 5 ) // framerate
   write_byte( 2 ) // life
   write_byte( 20 ) // width
   write_byte( 30 ) // noise
   write_byte( 200 ) // r, g, b
   write_byte( 200 ) // r, g, b
   write_byte( 200 ) // r, g, b
   write_byte( 200 ) // brightness
   write_byte( 200 ) // speed
   message_end()

   //Sparks
   message_begin( MSG_PVS, SVC_TEMPENTITY,vec2)
   write_byte( 9 )
   write_coord( vec2[0] )
   write_coord( vec2[1] )
   write_coord( vec2[2] )
   message_end()

}
//-------------------------------------***Blood effects***---------------
public fx_trans(player,amount)
{
  if (is_user_connected(player)) set_user_rendering(player,kRenderFxNone,0,0,0,kRenderTransAlpha,amount)
  return PLUGIN_CONTINUE
}

public fx_blood(origin[3])
{
    message_begin(MSG_BROADCAST,SVC_TEMPENTITY)
    write_byte(TE_BLOODSPRITE)
    write_coord(origin[0]+random_num(-20,20))
    write_coord(origin[1]+random_num(-20,20))
    write_coord(origin[2]+random_num(-20,20))
    write_short(spr_blood_spray)
    write_short(spr_blood_drop)
    write_byte(248) // color index
    write_byte(10) // size
    message_end()
}
public fx_blood_small(origin[3],num)
{
  // Blood decals
  static const blood_small[7] = {190,191,192,193,194,195,197}

  // Small splash
  for (new j = 0; j < num; j++) {
    message_begin(MSG_BROADCAST,SVC_TEMPENTITY)
    write_byte(TE_WORLDDECAL)
    write_coord(origin[0]+random_num(-100,100))
    write_coord(origin[1]+random_num(-100,100))
    write_coord(origin[2]-36)
    write_byte(blood_small[random_num(0,6)]) // index
    message_end()
  }
}
public fx_blood_large(origin[3],num)
{
  // Blood decals
  static const blood_large[2] = {204,205}

  // Large splash
  for (new i = 0; i < num; i++) {
    message_begin(MSG_BROADCAST,SVC_TEMPENTITY)
    write_byte(TE_WORLDDECAL)
    write_coord(origin[0]+random_num(-50,50))
    write_coord(origin[1]+random_num(-50,50))
    write_coord(origin[2]-36)
    write_byte(blood_large[random_num(0,1)]) // index
    message_end()
  }
}
/*---------------------------------------------------------------------
*********************        FX GIB Effects       *********************
---------------------------------------------------------------------*/
public fx_gib_explode(origin[3],num)
  {
  new flesh[3], x, y, z
  flesh[0] = mdl_gib_flesh
  flesh[1] = mdl_gib_meat
  flesh[2] = mdl_gib_legbone
  // Gib explosion
  // Head
  message_begin(MSG_BROADCAST,SVC_TEMPENTITY)
  write_byte(TE_MODEL)
  write_coord(origin[0])
  write_coord(origin[1])
  write_coord(origin[2])
  write_coord(random_num(-100,100))
  write_coord(random_num(-100,100))
  write_coord(random_num(100,200))
  write_angle(random_num(0,360))
  write_short(mdl_gib_head)
  write_byte(0) // bounce
  write_byte(500) // life
  message_end()

  // Spine
  message_begin(MSG_BROADCAST,SVC_TEMPENTITY)
  write_byte(TE_MODEL)
  write_coord(origin[0])
  write_coord(origin[1])
  write_coord(origin[2])
  write_coord(random_num(-100,100))
  write_coord(random_num(-100,100))
  write_coord(random_num(100,200))
  write_angle(random_num(0,360))
  write_short(mdl_gib_spine)
  write_byte(0) // bounce
  write_byte(500) // life
  message_end()

  // Lung
  for(new i = 0; i < random_num(1,2); i++) {
    message_begin(MSG_BROADCAST,SVC_TEMPENTITY)
    write_byte(TE_MODEL)
    write_coord(origin[0])
    write_coord(origin[1])
    write_coord(origin[2])
    write_coord(random_num(-100,100))
    write_coord(random_num(-100,100))
    write_coord(random_num(100,200))
    write_angle(random_num(0,360))
    write_short(mdl_gib_lung)
    write_byte(0) // bounce
    write_byte(500) // life
    message_end()
  }

  // Parts, 5 times
  for(new i = 0; i < 5; i++) {
    message_begin(MSG_BROADCAST,SVC_TEMPENTITY)
    write_byte(TE_MODEL)
    write_coord(origin[0])
    write_coord(origin[1])
    write_coord(origin[2])
    write_coord(random_num(-100,100))
    write_coord(random_num(-100,100))
    write_coord(random_num(100,200))
    write_angle(random_num(0,360))
    write_short(flesh[random_num(0,2)])
    write_byte(0) // bounce
    write_byte(500) // life
    message_end()
  }

  // Blood
  for(new i = 0; i < num; i++) {
    x = random_num(-100,100)
    y = random_num(-100,100)
    z = random_num(0,100)
    for(new j = 0; j < 5; j++) {
      message_begin(MSG_BROADCAST,SVC_TEMPENTITY)
      write_byte(TE_BLOODSPRITE)
      write_coord(origin[0]+(x*j))
      write_coord(origin[1]+(y*j))
      write_coord(origin[2]+(z*j))
      write_short(spr_blood_spray)
      write_short(spr_blood_drop)
      write_byte(248) // color index
      write_byte(15) // size
      message_end()
    }
  }
}
/*---------------------------------------------------------------------
***********************     Time Bomb Timer     ***********************
---------------------------------------------------------------------*/
public timebomb_timer(){

  new hibomb = 100
  new maxpl = get_maxplayers()
  new a
  for(a = 0; a < maxpl; a++) {
    if ((IsBomb[a] != 0) && (IsBomb[a] < hibomb)){
      hibomb = a
    }
  }

  for(a = 1; a < maxpl; a++) {
    if (IsBomb[a] > 0){
      emit_sound(a,CHAN_ITEM, "buttons/blip2.wav", 1.0, ATTN_NORM, 0, PITCH_NORM)
      if (IsBomb[a] == 1){
        blowem_up(a)
      }else{
        IsBomb[a] -= 1
        if (a == hibomb){
          new name[32]
          get_user_name(a,name,32)
          set_hudmessage(0, 100, 200, 0.05, 0.65, 2, 0.02, 1.0, 0.01, 0.1, 2)
          show_hudmessage(0,"%s will explode in %d seconds.",name,IsBomb[a])
          if (IsBomb[a] == 11){
            client_cmd(0,"spk ^"fvox/remaining^"")
          }
          if (IsBomb[a] < 11){
            new temp[48]
            num_to_word(IsBomb[a],temp,48)
            client_cmd(0,"spk ^"fvox/%s^"",temp)
          }
        }
        if(is_user_alive(a) == 0){
          blowem_up(a)
        }
      }
    }
  }
}
/*-------------------------------------------------------------------------
***********************     Time Bomb Explosion     ***********************
-------------------------------------------------------------------------*/
public blowem_up(id){

 new bombguyfrags

 if(id == 100){
    new maxpl = get_maxplayers()
    for(new a = 0; a < maxpl; a++) {
         if ((IsBomb[a] > 0) || (IsKamik[a] == 1)){
    IsKamik[a] = 0
    IsBomb[a] = 0
    new name[32]
    get_user_name(a,name,32)
    if (is_user_connected(a)) set_user_rendering(a,kRenderFxNone,255,255,255, kRenderNormal,16);
    set_hudmessage(0, 100, 200, 0.05, 0.65, 2, 0.02, 1.0, 0.01, 0.1, 2)
    show_hudmessage(0,"%s has exploded.",name)
    new origin[3]
    get_user_origin(a,origin)
    origin[2] = origin[2] - 26
    user_kill(a,1)
    explode(origin)
    fx_trans(a,0)
    fx_gib_explode(origin,5)
    fx_blood_large(origin,3)
    fx_blood_small(origin,20)
    }
  }
  }else{
  if (IsBomb[id] > 0){
    IsBomb[id] = 0
    IsKamik[id] = 0
    new name[32]
    new team[32]
    get_user_name(id,name,32)
    if (is_user_connected(id)) set_user_rendering(id,kRenderFxNone,255,255,255, kRenderNormal,16);
    set_hudmessage(0, 100, 200, 0.05, 0.65, 2, 0.02, 1.0, 0.01, 0.1, 2)
    show_hudmessage(0,"%s has exploded.",name)
    ejl_ff = get_cvar_float("mp_friendlyfire")
    new origin[3]
    get_user_origin(id,origin)
    get_user_team(id, team , 32);
    new maxpl = get_maxplayers()
    for(new a = 1; a < maxpl; a++) {
        new origin1[3]
        new team1[32]
        get_user_origin(a,origin1)
        get_user_team(a, team1 , 32)
        if(is_user_alive(a) != 0){
    if( ! (origin[0]-origin1[0] > BOMBKILL_RANGE || origin[0]-origin1[0] < - BOMBKILL_RANGE ||
                        origin[1]-origin1[1] > BOMBKILL_RANGE || origin[1]-origin1[1] < - BOMBKILL_RANGE ||
                        origin[2]-origin1[2] > BOMBKILL_RANGE || origin[2]-origin1[2] < - BOMBKILL_RANGE) ){
      if(ejl_ff == 0){
      if(!equal(team, team1, 1)){
        client_print(a,print_chat,"  You were to close to the walking timebomb.")
        user_kill(a,1)
        if(a != id){
        bombguyfrags = get_user_frags(id)
        bombguyfrags +=1
        set_user_frags(id,bombguyfrags)
        shAddXP(id, a, 1)
        }
        explode(origin1)
        blood(origin1)
        fx_trans(a,0)
        fx_gib_explode(origin1,5)
        fx_blood_large(origin1,3)
        fx_blood_small(origin1,20)
        }
      }
      if(ejl_ff == 1){
      if(rs == false){
        client_print(a,print_chat,"  Sorry, the bomb killed you.")
        user_kill(a,1)
        if(!equal(team, team1, 1)){
        bombguyfrags = get_user_frags(id)
        bombguyfrags +=1
        set_user_frags(id,bombguyfrags)
        shAddXP(id, a, 1)
        }
        if(a != id){
        explode(origin1)
        blood(origin1)
        fx_trans(a,0)
        fx_gib_explode(origin1,5)
        fx_blood_large(origin1,3)
        fx_blood_small(origin1,20)
        }
      }
      else {
        client_print(a,print_chat,"  Sorry, the bomb killed you.")
        if(a == id){
        user_kill(a,1)
                       }
                     }
                  }
               }
            }
        }
    if(ejl_ff == 0){
    client_print(id,print_chat,"  Sorry, the bomb killed you.")
    user_kill(id,1)
        }
    origin[2] = origin[2] - 26
    explode(origin)
    blood(origin)
    fx_trans(id,0)
    fx_gib_explode(origin,5)
    fx_blood_large(origin,3)
    fx_blood_small(origin,20)
      }
   }
}
/*****************************************************************
*********************        DICE ROLL       *********************
*****************************************************************/

public gamblor_diceroll(id)
{
  if(!is_user_alive(id)) return PLUGIN_HANDLED
  if ( gPlayerUltimateUsed[id] ) return PLUGIN_HANDLED

  if ( !gPlayerUltimateUsed[id] )
  {
    ultimateTimer(id, get_cvar_num("gamblor_cooldown") * 1.0)
    new diceroll = random_num(1,25)
    set_hudmessage(id, 100, 200, 0.05, 0.65, 2, 0.02, 4.0, 0.01, 0.1, 2)
    if (diceroll == 1) {
      if (dice1[id] > 0) {
          show_hudmessage(id,"You already rolled reflect damage, Roll again!!")
          gPlayerUltimateUsed[id]=false
          return PLUGIN_HANDLED
      }else{
            dice1[id] = 1 //Mirror damage
            new mirror[32]
            get_user_name(id,mirror,32)
            show_hudmessage(id,"You rolled the dice and now reflect 1/2 damage done to you!")
            set_hudmessage(200, 100, 0, -1.0, 0.30, 0, 6.0, 6.0, 0.5, 0.15, 1)
            show_hudmessage(0,"%s will reflect 1/2 damage done back at you! becareful",mirror)
          }
      return PLUGIN_HANDLED
      }
    if (diceroll == 2) {
      if (dice2[id] > 0) {
         show_hudmessage(id,"You already rolled Low health, Roll again!!")
         gPlayerUltimateUsed[id]=false
         return PLUGIN_HANDLED
      }else{ //Get Given Low health
        dice2[id] = 1
        set_user_health(id,25)
        new origin[3]
        get_user_origin(id,origin)
        origin[2] = origin[2] - 26
        new sorigin[3]
        sorigin[0] = origin[0] + 150
        sorigin[1] = origin[1] + 150
        sorigin[2] = origin[2] + 400
        lightning(sorigin,origin)
        emit_sound(id,CHAN_ITEM, "ambience/thunder_clap.wav", 1.0, ATTN_NORM, 0, PITCH_NORM)
        show_hudmessage(id,"You rolled the dice and now have low health!")
      }
      return PLUGIN_HANDLED
      }
    if (diceroll == 3) {
       if (dice3[id] > 0) {
        show_hudmessage(id,"You already rolled Being slapped, Roll again!!")
        gPlayerUltimateUsed[id]=false
        return PLUGIN_HANDLED
       }else{ // Get Slapped once
        dice3[id] = 1
        user_slap(id,100)
        show_hudmessage(id,"You rolled the dice and got slapped!")
        }
       return PLUGIN_HANDLED
      }
    if (diceroll == 4) {
       if (dice4[id] > 0) {
              show_hudmessage(id,"You already rolled Being Burried, Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{ // Get Burried in the ground
          dice4[id] = 1
          new name1[32], name2[32]
          get_user_name(id,name1,32)
          get_user_name(id,name2,32)
          new origin[3]
          get_user_origin(id, origin)
          origin[2] -= 30
          set_user_origin(id, origin)
          show_hudmessage(id,"You rolled the dice and got burried alive!")
          }
       return PLUGIN_HANDLED
      }
    if (diceroll == 5) {
       if (dice5[id] > 0) {
              show_hudmessage(id,"You already rolled Glow, Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{ // Start glowing
        dice5[id] = 1
        new red = random_num(50,255)
        new green = random_num(50,255)
        new blue = random_num(50,255)
        if (is_user_connected(id)) set_user_rendering(id,kRenderFxGlowShell,red,green,blue,kRenderNormal,16)
        show_hudmessage(id,"You rolled the dice and you now glow!")
        }
       return PLUGIN_HANDLED
       }
    if (diceroll == 6) {
        gamblor_diceroll(id)
        return PLUGIN_HANDLED
			 }//Function Removed
			 /* 
       if (dice6[id] > 0) {
              show_hudmessage(id,"You already rolled Can't Shoot heads, Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{ // Can only shoot legs
        dice6[id] = 1
        set_user_hitzones(id,0,253)
        show_hudmessage(id,"You rolled the dice and can now not hit heads!")
        }
       return PLUGIN_HANDLED
      }*/
    if (diceroll == 7) {
       if (dice7[id] > 0) {
              show_hudmessage(id,"You already Became a timebomb, Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{ // Become a Timebomb
        dice7[id] = 1
        new player = id
        IsBomb[player] = BOMB_FUSE
        new name[32]
        get_user_name(player,name,32)
        if (is_user_connected(player)) set_user_rendering(player,kRenderFxGlowShell, 255,0,0, kRenderNormal,16)
        register_event("DeathMsg","death","a")
        client_cmd(0,"spk ^"vox/warning _comma _comma detonation device activated^"")
        client_print(0,print_chat,"%s has become a human timebomb, run for cover!!!", name)
        show_hudmessage(id,"You rolled the dice, you are now a TIMEBOMB!!")
        }
       return PLUGIN_HANDLED
      }
    if (diceroll == 8) {
       if (dice8[id] > 0) {
              show_hudmessage(id,"You already rolled GODLIKE, Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{ // Get given 500hp
        dice8[id] = 1
        new godlike[32]
        get_user_name(id,godlike,32)
        set_user_health(id,500)
        show_hudmessage(id,"You rolled the dice and now have 500hp")
        set_hudmessage(200, 100, 0, -1.0, 0.30, 0, 6.0, 6.0, 0.5, 0.15, 1)
        show_hudmessage(0,"%s is now GODLIKE with 500hp",godlike)
        }
       return PLUGIN_HANDLED
      }
    if (diceroll == 9) {
       if (dice9[id] > 0) {
              show_hudmessage(id,"You already rolled Give Weapons, Roll again!!")
              gPlayerUltimateUsed[id]=false
       }else{ // Get given weapons
        dice1[id] = 1
        give_item(id,"weapon_ak47")
        give_item(id,"weapon_m249")
        give_item(id,"weapon_m3")
        give_item(id,"weapon_m4a1")
        give_item(id,"weapon_awp")
        give_item(id,"weapon_deagle")
        show_hudmessage(id,"You rolled the dice and have been given Weapons!")
        }
       return PLUGIN_HANDLED
      }
    if (diceroll == 10) {
        if (dice10[id] > 0) {
               show_hudmessage(id,"You already rolled High Armour, Roll again!!")
               gPlayerUltimateUsed[id]=false
               return PLUGIN_HANDLED
         }else{ // Get given armour
          dice10[id] = 1
          set_user_armor(id,800)
          show_hudmessage(id,"You rolled the dice and given 800 Armour!")
           }
        return PLUGIN_HANDLED
        }
    if (diceroll == 11) {
       if (dice11[id] > 0) {
              show_hudmessage(id,"You already rolled Stunned, Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{ // Stunned
        dice11[id] = 1
        shStun(id, 10)
        set_user_maxspeed(id, 50.0)
        show_hudmessage(id,"You rolled the dice, And were Stunned!")
        }
       return PLUGIN_HANDLED
      }
    if (diceroll == 12) {
       if ( dice12[id] > 0) {
              show_hudmessage(id,"You already rolled Super M3 Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{ // Give your Shotgun more damage
        dice12[id] = 1
        show_hudmessage(id,"You rolled the dice, Your M3 Shotgun now does MORE damage!")
        shGiveWeapon(id,"weapon_m3")
        }
       return PLUGIN_HANDLED
      }
    if (diceroll == 13) {
       if (dice13[id] > 0) {
              show_hudmessage(id,"You already rolled Super Colt, Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{ // Give your Colt more damage
        dice13[id] = 1
        shGiveWeapon(id,"weapon_m4a1")
        show_hudmessage(id,"You rolled the dice, Your Colt now does MORE damage!")
        }
       return PLUGIN_HANDLED
      }
    if (diceroll == 14) {
       if (dice14[id] > 0) {
              show_hudmessage(id,"You already rolled Lose your weapons, Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{ // Lose all of your weapons
        dice14[id] = 1
        new origin[3]
        get_user_origin(id,origin)
        origin[2] -= 2000
        set_user_origin(id,origin)
        new iweapons[32], wpname[32], inum
        get_user_weapons(id,iweapons,inum)
        for(new a=0; a<inum; ++a) {
            get_weaponname(iweapons[a],wpname,31)
            engclient_cmd(id,"drop",wpname)
        }
        shGiveWeapon(id,"weapon_usp")
        origin[2] += 2005
        set_user_origin(id,origin)
        show_hudmessage(id,"You rolled the dice, and lost all your weapons!")
        }
       return PLUGIN_HANDLED
      }
    if (diceroll == 15) {
       if (dice15[id] > 0) {
              show_hudmessage(id,"You already rolled Look like the enemy Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{ // Morph into the enemy
        dice15[id] = 1
        new CTSkins[4][]={"sas","gsg9","urban","gign"}
        new TSkins[4][]={"arctic","leet","guerilla","terror"}
        new newSkin[32]
        new num = random_num(0,3)
        if ( get_user_team(id) == 1 )
        add(newSkin,31,CTSkins[num])
        else
        add(newSkin,31,TSkins[num])
        #if defined AMXX_VERSION
          cs_set_user_model(id, newSkin)
        #else
          CS_SetModel(id, newSkin)
        #endif
        g_morphed[id]=true
        gamblor_sound(id)
        show_hudmessage(id,"You rolled the dice, You now look like the enemy!")
          }
       return PLUGIN_HANDLED
      }
    if (diceroll == 16) {
       if (dice16[id] > 0) {
              show_hudmessage(id,"You already rolled Summon snarks, Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{ // Summon Snarks onto yourself
        dice16[id] = 1
        emit_sound(id, CHAN_STATIC, "ambience/port_suckin1.wav", 1.0, ATTN_NORM, 0, PITCH_NORM)
        for ( new k = 1; k <= 2  /2 +7; k++) {
        set_task(k * 0.2,"summon_monster", id)
        show_hudmessage(id,"You rolled the dice, and summond snarks!")
        }
        }
       return PLUGIN_HANDLED
      }
    if (diceroll == 17) {
       if (dice17[id] > 0) {
              show_hudmessage(id,"You already rolled Poisoned Bullets, Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{ // Makes your bullets poisonous
         dice17[id] = 1
         Gamblor_poison(id)
         show_hudmessage(id,"You rolled the dice, You now have poisoned bullets!")
        }
       return PLUGIN_HANDLED
      }
    if (diceroll == 18) {
       if (dice18[id] > 0) {
              show_hudmessage(id,"You already rolled 40 hp heal p/s, Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{ // Heals you
        dice18[id] = 1
        GamHeal[id]=true
        Gamblor_heal(id)
        show_hudmessage(id,"You rolled the dice, You now heal 40 hp every 10 seconds!")
       }
       return PLUGIN_HANDLED
      }
    if (diceroll == 19) {
       if (dice19[id] > 0) {
              show_hudmessage(id,"You already rolled Invisibility, Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{ // Makes you Hard to see
       dice19[id] = 1
       if (is_user_connected(id)) set_user_rendering(id,kRenderFxPulseSlowWide,0,0,0,kRenderTransAlpha,30)
       show_hudmessage(id,"You rolled the dice, and are now hard to see!")
        }
       return PLUGIN_HANDLED
       }
    if (diceroll == 20) {
       if (dice20[id] > 0) {
              show_hudmessage(id,"You already rolled Unlimited Grenades, Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{ // Unlimited Grenades
          dice20[id] = 1
          extrgren[id]=true
          register_event( "AmmoX", "on_AmmoX", "b" )
          give_grenade(id)
          show_hudmessage(id,"You rolled the dice, and now have unlimited grenades!")
          }
       return PLUGIN_HANDLED
       }
    if (diceroll == 21) {
        gamblor_diceroll(id)
        return PLUGIN_HANDLED
			 } // Function removed
       /*if (dice21[id] > 0) {
              show_hudmessage(id,"You already rolled Can only hit heads, Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{ // Only lets you hit heads
        dice21[id] = 1
        set_user_hitzones(id,0,2)
        show_hudmessage(id,"You rolled the dice, and can now only hit heads!")
        }
       return PLUGIN_HANDLED
        }*/
    if (diceroll == 22) {
        gamblor_diceroll(id)
        return PLUGIN_HANDLED
        }
    if (diceroll == 23) {
       if (dice23[id] > 0) {
              show_hudmessage(id,"You already rolled Uber Slap, Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{ // Get uber slapped
        dice24[id] = 1
        set_task(0.1, "slap_player", id, "", 0, "a", 50)
        show_hudmessage(id,"You rolled the dice, and have been UBER Slapped!")
       }
       return PLUGIN_HANDLED
       }
    if (diceroll == 24) {
       if (dice24[id] > 0) {
              show_hudmessage(id,"You already rolled 250 health, Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{
        dice24[id] = 1
        if (get_user_health(id) > 250) {
            show_hudmessage(id,"You have more than 250 Health roll again!!")
            gPlayerUltimateUsed[id]=false
            return PLUGIN_HANDLED
        }else{
             set_user_health(id,250)
             show_hudmessage(id,"You rolled the dice and now have 250hp")
             }
        }
       return PLUGIN_HANDLED
       }
    if (diceroll == 25) {
       if (dice25[id] > 0) {
              show_hudmessage(id,"You already rolled Super USP, Roll again!!")
              gPlayerUltimateUsed[id]=false
              return PLUGIN_HANDLED
       }else{ // super USP
        dice25[id] = 1
        shGiveWeapon(id,"weapon_usp")
        show_hudmessage(id,"You rolled the dice, Your USP now does DOUBLE damage!")
        }
       return PLUGIN_HANDLED
        }
    return PLUGIN_HANDLED
    }
  return PLUGIN_HANDLED
}
/***************************
** Gamblors Damage events **
***************************/
//==========================***MAIN DAMAGE***=========================
public Gamblor_DAMAGE(id)
  {
   if (is_user_connected(id) == 1)
    {
      new damage = read_data(2)
      new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
      if (is_user_alive(id) && is_user_alive(attacker))
      {
       uspdamage(id,weapon,damage,attacker)
       coltdamage(id,weapon,damage,attacker)
       m3damage(id,weapon,damage,attacker)
       poisondamage(id,weapon,damage,attacker)
       mirrordamage(id,damage)
      }
    }
  }
//-----------------------------***COLT DAMAGE***----------------------
public coltdamage(id,weapon,damage,attacker) {
  if (dice13[attacker] > 0) {
    if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return PLUGIN_CONTINUE

    if ( gHasGamblorPower[attacker] && weapon == CSW_M4A1 && is_user_alive(id) )
    {
        new extraDamage = floatround(damage * 1.5 - damage)
        shExtraDamage( id, attacker, extraDamage, "Gamblor Colt" )
        set_hudmessage(0, 200, 0, 0.80, 0.80, 2, 0.1, 4.0, 0.02, 0.02, 4)
        show_hudmessage(id,"+%i Gamblor Colt damage",extraDamage)
        }
  }
  return PLUGIN_CONTINUE
}
//--------------------***M3 DAMAGE***----------------------------------
public m3damage(id,weapon,damage,attacker) {
  if (dice12[attacker] > 0)  {

    if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return PLUGIN_CONTINUE

    if ( gHasGamblorPower[attacker] && is_user_alive(id) && weapon == CSW_M3 && dice12[attacker] > 0)
    {
        new extraDamage = floatround(damage * 1.5 - damage)
        shExtraDamage( id, attacker, extraDamage, "Gamblor M3" )
        set_hudmessage(0, 200, 0, 0.80, 0.80, 2, 0.1, 4.0, 0.02, 0.02, 4)
        show_hudmessage(id,"+%i Gamblor M3 damage",extraDamage)
        }
  }
  return PLUGIN_CONTINUE
}
//----------------------***USP DAMAGE***--------------------------------
public uspdamage(id,weapon,damage,attacker) {
  if (dice25[attacker] > 0)  {

    if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return PLUGIN_CONTINUE

    if ( gHasGamblorPower[attacker] && is_user_alive(id) && weapon == CSW_USP && dice25[attacker] > 0)
    {
        new extraDamage = floatround(damage * 2.0 - damage)
        shExtraDamage( id, attacker, extraDamage, "Gamblor USP" )
        set_hudmessage(0, 200, 0, 0.80, 0.80, 2, 0.1, 4.0, 0.02, 0.02, 11)
        show_hudmessage(id,"+%i Gamblor USP damage",extraDamage)
        }
  }
  return PLUGIN_CONTINUE
}
//--------------------***POISON DAMAGE***--------------------------------
public poisondamage(id,weapon,damage,attacker) {
if (dice17[attacker] > 0)  {

    if ( attacker <=0 || attacker>SH_MAXSLOTS ) return PLUGIN_CONTINUE

    if ( gHasGamblorPower[attacker] && is_user_alive(id) && weapon!=CSW_HEGRENADE && id!=attacker && dice17[attacker] > 0)
    {
       // do Poison damage
       g_isPoisoned[id][attacker]=true
    }
    return PLUGIN_CONTINUE
}
return PLUGIN_CONTINUE
}
//---------------------***REFLECT DAMAGE***-------------------------------
public mirrordamage(id,damage) {
  if (dice1[id] > 0)  {
       new attacker = get_user_attacker(id)

       if (gHasGamblorPower[id] && attacker != id && is_user_alive(attacker)) {
            new Mirrordam = floatround( damage * 0.5 )
            shExtraDamage( attacker, id, Mirrordam, "Gamblor Reflect" )
            set_hudmessage(0, 200, 0, 0.80, 0.80, 2, 0.1, 4.0, 0.02, 0.02, 11)
            show_hudmessage(id,"Reflected %i damage",Mirrordam)
       }
  }
  return PLUGIN_CONTINUE
}
//--------------------------------------------------------------------
/***********************-=Grenade Event=-*********************/
//--------------------------------------------------------------------
public on_AmmoX(id)
  {
    if ( !shModActive() ) return
    if ( id <= 0 || id > SH_MAXSLOTS) return
    if ( !is_user_alive(id) || !is_user_connected(id)) return

    new iAmmoType = read_data(1)
    new iAmmoCount = read_data(2)

    if ( iAmmoType == AMMOX_HEGRENADE && iAmmoCount == 0 && extrgren[id] == true) {
    set_task( 1.0, "give_grenade", id )
    }
}
//-------------------------------------------------------------------
public give_grenade(id)
{
  if ( is_user_alive(id) && extrgren[id] == true && shModActive() ) {
       shGiveWeapon(id, "weapon_hegrenade" )
  }
}
//-------------------------------------------------------------------
/**********************************-=Heal Event=-*******************/
//-------------------------------------------------------------------
public Gamblor_heal(id){
  if ( GamHeal[id] == true && is_user_alive(id)  ){
  set_task(10.0,"gamblor_loop",0,"",0,"b" )
  }else{
  //do nothing
  }
  return PLUGIN_HANDLED
}
 //------------------------------------------------------------------
public gamblor_loop(){
      for ( new id = 1; id <= SH_MAXSLOTS; id++ ) {
  if ( GamHeal[id] == true && is_user_alive(id)  ){
    shAddHPs(id, 40, 200)
  }else{
  //do nothing
  }
    }
}
//------------------------------------------------------------------
/**************************
**    NEW ROUND EVENT    **
**************************/
//------------------------------------------------------------------
public new_round(id) {

  if (!is_user_connected(id)) return PLUGIN_HANDLED
  gPlayerUltimateUsed[id]=false
  if (is_user_connected(id)) set_user_rendering(id,kRenderFxGlowShell,0,0,0,kRenderTransAlpha,255)
  set_user_hitzones(id,0,255)
  shRemHealthPower(id)
  shRemArmorPower(id)
  GamHeal[id]=false
  extrgren[id]=false
  IsBomb[id] = 0
  gamblor_unmorph(id)
  dice1[id] = 0
  dice2[id] = 0
  dice3[id] = 0
  dice4[id] = 0
  dice5[id] = 0
  dice6[id] = 0
  dice7[id] = 0
  dice8[id] = 0
  dice9[id] = 0
  dice10[id] = 0
  dice11[id] = 0
  dice12[id] = 0
  dice13[id] = 0
  dice14[id] = 0
  dice15[id] = 0
  dice16[id] = 0
  dice17[id] = 0
  dice18[id] = 0
  dice19[id] = 0
  dice20[id] = 0
  dice21[id] = 0
  dice22[id] = 0
  dice23[id] = 0
  dice24[id] = 0
  dice25[id] = 0
  for ( new killer=1; killer<=SH_MAXSLOTS; killer++ ) {
   if (  g_isPoisoned[id][killer]) {
    g_isPoisoned[id][killer]=false
  }
}
  new temp[16]
  get_user_info(id,"ST",temp,15)
  Stalker[id]=strtonum(temp)
  return PLUGIN_CONTINUE
}
//--------------------------------------------------
/**************************
**     Key Down Event    **
**************************/
//--------------------------------------------------
public gamblor_kd()
{
  // First Argument is an id with Gamblor Powers!
  new temp[6]
  read_argv(1,temp,5)
  new id=str_to_num(temp)

  if ( gHasGamblorPower[id] && hasRoundStarted() && !Stalker[id])
  {
    if ( gPlayerUltimateUsed[id] )
    {
    playSoundDenySelect(id)
    return PLUGIN_HANDLED
    }
    gamblor_diceroll(id)
    }else{
    }

  return PLUGIN_HANDLED
}
//------------------------------------------------------------
/*******************-=Poison Event=-*************************/
//------------------------------------------------------------
public Gamblor_poison(id){
  if ( dice17[id] > 0 && is_user_alive(id)  ){
  gmsgDamage = get_user_msgid("Damage")
  set_task(5.0,"gampois_loop",0,"",0,"b")
  register_srvcmd("gampois_poison", "gampois_poison")
  register_srvcmd("gampois_loop", "gampois_loop")
  gPoisonPoints=5
  }else{
  //do nothing
  }
  return PLUGIN_HANDLED
}
//--------------------***Poison Target***---------------------
public gampois_poison(id) {
  if (!shModActive() ) return PLUGIN_CONTINUE

  new arg[32],arg2[32]
  read_argv(1,arg,31)
  read_argv(2,arg2,31)
  new player = cmd_target(id,arg,7)
  if (!player) return PLUGIN_HANDLED

  new player2 = cmd_target(id,arg2,7)
  if (!player2) return PLUGIN_HANDLED

  if ( gHasGamblorPower[player2] && is_user_alive(player) ) {
    g_isPoisoned[player][player2]=true
  }

  return PLUGIN_CONTINUE
}
//------------------***Poison Loop***--------------------------
public gampois_loop()
{
  for ( new id=1; id<=SH_MAXSLOTS; id++ ) {
   for ( new killer=1; killer<=SH_MAXSLOTS; killer++ ) {
    if (  g_isPoisoned[id][killer] && is_user_alive(id) )
    {
    shExtraDamage( id, killer, gPoisonPoints, "infection" )
    new korigin[3]
    get_user_origin(id,korigin)
    message_begin(MSG_ONE, gmsgDamage, {0,0,0}, id)
    write_byte(30) // dmg_save
    write_byte(30) // dmg_take
    write_long((1 << 16)) // visibleDamageBits
    write_coord(korigin[0]) // damageOrigin.x
    write_coord(korigin[1]) // damageOrigin.y
    write_coord(korigin[2]) // damageOrigin.z
    message_end()
    }
   }
  }
}
//---------------------------------------------------
/***************-=Player Slap Event=-***************/
//----------------***Slap Player***------------------
public slap_player(id) {
    if (get_user_health(id) > 25){
    user_slap(id,2)
    } else {
   }
    return PLUGIN_CONTINUE
}
//----------------------------------------------------
/************-=Client Events=-***********************/
//------------***Client Connection***-----------------
public client_connect(id){
  IsBomb[id] = 0
  for ( new killer=1; killer<=SH_MAXSLOTS; killer++ ) {
   if (  g_isPoisoned[id][killer]) {
    g_isPoisoned[id][killer]=false
    }
 }
  return PLUGIN_CONTINUE
}
//------------***Client Disconnection***--------------
public client_disconnect(id){
  IsBomb[id] = 0
  for ( new killer=1; killer<=SH_MAXSLOTS; killer++ ) {
   if (  g_isPoisoned[id][killer]) {
    g_isPoisoned[id][killer]=false
    }
 }
  return PLUGIN_CONTINUE
}
//------------***Target Death(for poison)***----------
public death() {
new id = read_data(2)
for ( new killer=1; killer<=SH_MAXSLOTS; killer++ ) {
 if (  g_isPoisoned[id][killer]) {
  g_isPoisoned[id][killer]=false
  }
 }
}
//----------------------------------------------------
/*************    -=PLUGIN END=-     ****************/
//----------------------------------------------------
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1046\\ f0\\ fs16 \n\\ par }
*/
