// Havok! from Marvel Comics. Havok absorbs ambient cosmic energy into the cells of his body and processes it into plasma. He is Cyclops's brother.

/* CVARS - copy and paste to shconfig.cfg

havok_level 5
havok_radius 600		// How close the grenade thrower has to be (Default 600)
havok_cooldown 90		// Seconds before Havok can blow up another grenade (Default 60)

*/

// Note: Penguin or Polaris may interfere with the effect of this hero.

//---------- User Changeable Defines --------//

// Time before nade blows up after thrown
#define DMG_DELAY 0.0

//------- Do not edit below this point ------//

#include <amxmodx>
#include <fakemeta>
#include <csx>
#include <superheromod>

// GLOBAL VARIABLES
new HeroName[] = "Havok"
new bool:HasHavok[SH_MAXSLOTS+1]
new havok_radius, havok_cooldown
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Havok", "1.0", "vittu")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("havok_level", "5")
	havok_radius = register_cvar("havok_radius", "600")
	havok_cooldown = register_cvar("havok_cooldown", "90")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	shCreateHero(HeroName, "Blow Up Grenades", "Plasma Blast a nearby Enemy's HE Grenade just after it's thrown", false, "havok_level")

	// INIT
	register_srvcmd("havok_init", "havok_init")
	shRegHeroInit(HeroName, "havok_init")

	// EVENTS
	register_event("ResetHUD", "new_spawn", "b")
}
//----------------------------------------------------------------------------------------------
public havok_init()
{
	// First Argument is an id
	new temp[6]
	read_argv(1, temp, 5)
	new id = str_to_num(temp)

	// 2nd Argument is 0 or 1 depending on whether the id has the hero
	read_argv(2, temp, 5)
	new hasPowers = str_to_num(temp)

	HasHavok[id] = hasPowers ? true : false
}
//----------------------------------------------------------------------------------------------
public new_spawn(id)
{
	gPlayerUltimateUsed[id] = false
}
//----------------------------------------------------------------------------------------------
public grenade_throw(index, greindex, wId)
{
	if ( !shModActive() || wId != CSW_HEGRENADE || !is_user_connected(index) ) return

	new CsTeams:indexTeam = cs_get_user_team(index)
	new indexName[32]
	get_user_name(index, indexName, 31)

	new players[SH_MAXSLOTS], playerCount, player
	get_players(players, playerCount, "a")

	new Float:indexOrigin[3], Float:playerOrigin[3]
	pev(player, pev_origin, indexOrigin)

	new Float:range = get_pcvar_float(havok_radius)

	// Find a havok
	for (new i = 0; i < playerCount; i++)
	{
		player = players[i]
		if ( !HasHavok[player] || gPlayerUltimateUsed[player] )
			continue

		if ( indexTeam == cs_get_user_team(player) )
			continue

		pev(player, pev_origin, playerOrigin)

		if ( vector_distance(indexOrigin, playerOrigin) <= range )
		{
			//May have to make some changes here and set a task to avoid issues with penguin and polaris
			set_pev(greindex, pev_dmgtime, get_gametime())
			set_pev(greindex, pev_nextthink, get_gametime() + DMG_DELAY)

			new cooldownMessage[46]

			new Float:cooldown = get_pcvar_float(havok_cooldown)
			if ( cooldown > 0.0 )
			{
				ultimateTimer(player, cooldown)
				formatex(cooldownMessage, 45, ", you must wait %0.1f seconds to recharge", cooldown)
			}

			//maybe add a sound to let them know instead
			//possibly let the person whose nade blew also
			client_print(player, print_chat, "[SH](%s) You blew up %s's grenade%s", HeroName, indexName, cooldownMessage)

			break
		}
	}
}
//----------------------------------------------------------------------------------------------
public client_connect(id)
{
	HasHavok[id] = false
}
//----------------------------------------------------------------------------------------------