// Uber Gunner! - UberGunner Hero From Outworld , Sent To Kill All Humanity On Earth

/* CVARS - copy and paste to shconfig.cfg

//Uber Gunner
UberGunner_level 4
UberGunner_teamglow 0		//Glow Team Color when player skin in use (0=no 1=yes)
UberGunner_m4a1mult 2.0		//Damage multiplyer for his M4A1
UberGunner_health 200		//Default 100 (no extra health)
UberGunner_armor 200		//Default 100
UberGunner_gravity 1.0		//Default 1.0 = no extra gravity (0.50 is 50% normal gravity, ect.)
UberGunner_speed 600		//-1 = no extra speed, this cvar is for all weapons (for faster then normal speed set to 321 or higher)

*/

/*
* v1.3 - vittu - 1/3/05
*      - Fixed up task set for team glow, so as not to interfere
*         with other tasks when it's removed.
*      - This should be the final version for now.
*
* v1.2 - vittu - 12/26/04
*      - Changed 2 default cvars, gravity and speed to avoid bugs.
*      - Changed give weapon time on ResetHUD, to avoid bugs.
*
* v1.1 - vittu - 12/21/04
*      - set a delay to change player model, better for servers with
*         sh_loadimmediate 0.
*
* v1.0 - vittu - 12/20/04
*      - Complete rework of entire code, started from scratch.
*      - Changed player model to automatic rather than a keydown.
*      - Added p_ weapon model (for 3rd person view).
*
*   Concept by Spartan-117 and JASerrano
*   Player and Weapon models by Strykerwolf (aka Alex Wright) & Grenappels
*/

#include <amxmod>
#include <vexd_utilities>
#include <superheromod>

// GLOBAL VARIABLES
new gHeroName[]="UberGunner"
new bool:gHasUberGunnerPower[SH_MAXSLOTS+1]
new bool:gmorphed[SH_MAXSLOTS+1]
new gTaskID
new gUberGunnerSound[]="items/suitchargeno1.wav"
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Uber Gunner", "1.0", "Kebmaster")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("UberGunner_level", "4")
	register_cvar("UberGunner_teamglow", "0")
	register_cvar("UberGunner_m4a1mult", "2.0")
	register_cvar("UberGunner_health", "200")
	register_cvar("UberGunner_armor", "200")
	register_cvar("UberGunner_gravity", "1.0")
	register_cvar("UberGunner_speed", "600")


	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	shCreateHero(gHeroName, "Wild2k", "Become UberGunner - Get an m4a1 wich does more dmg.", false, "UberGunner_level" )

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// INIT
	register_srvcmd("UberGunner_init", "UberGunner_init")
	shRegHeroInit(gHeroName, "UberGunner_init")

	register_event("ResetHUD", "newSpawn", "b")
	register_event("CurWeapon", "weaponChange", "be", "1=1")
	register_event("Damage", "UberGunner_damage", "b", "2!0")
	register_event("DeathMsg", "UberGunner_death", "a")

	//Set a random number to the looping task so it can be removed without conflict
	gTaskID = random_num(10181, 100000)

	// Let Server know about UberGunner's Variables
	shSetShieldRestrict(gHeroName)
	shSetMaxHealth(gHeroName, "UberGunner_health")
	shSetMaxArmor(gHeroName, "UberGunner_armor")
	shSetMinGravity(gHeroName, "UberGunner_gravity")
	shSetMaxSpeed(gHeroName, "UberGunner_speed", "[0]")
}
//----------------------------------------------------------------------------------------------
public plugin_precache()
{
	precache_model("models/player/UberGunner/UberGunner.mdl")
	precache_model("models/shmod/UberGunner_v_m4a1.mdl")
	precache_sound(gUberGunnerSound)
}
//----------------------------------------------------------------------------------------------
public UberGunner_init()
{
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id = str_to_num(temp)

	// 2nd Argument is 0 or 1 depending on whether the id has UberGunner
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)

	gHasUberGunnerPower[id] = (hasPowers != 0)

	//Reset thier shield restrict status
	//Shield restrict MUST be before weapons are given out
	shResetShield(id)

	if ( is_user_connected(id) ) {
		if ( gHasUberGunnerPower[id] ) {
			UberGunner_weapons(id)
			switchmodel(id)
			UberGunner_tasks(id)
		}
		else {
			UberGunner_unmorph(id)
			shRemHealthPower(id)
			shRemArmorPower(id)
			shRemGravityPower(id)
			shRemSpeedPower(id)
		}
	}
}
//----------------------------------------------------------------------------------------------
public newSpawn(id)
{
	if ( gHasUberGunnerPower[id] && is_user_alive(id) && shModActive() ) {
		set_task(0.1, "UberGunner_weapons", id)
		UberGunner_tasks(id)

		new wpnid = read_data(2)
		if (wpnid != CSW_M4A1 && wpnid > 0) {
			new wpn[32]
			get_weaponname(wpnid,wpn,31)
			engclient_cmd(id,wpn)
		}
	}
}
//----------------------------------------------------------------------------------------------
public UberGunner_tasks(id)
{
	set_task(1.0, "UberGunner_morph", id)

	if( get_cvar_num("UberGunner_teamglow") ){
		set_task(1.0, "UberGunner_glow", id+gTaskID, "", 0, "b" )
	}

}
//----------------------------------------------------------------------------------------------
public UberGunner_weapons(id)
{
	if ( is_user_alive(id) ) {
		shGiveWeapon(id,"weapon_m4a1")
	}
}
//----------------------------------------------------------------------------------------------
public switchmodel(id)
{
	if ( !is_user_alive(id) || !gHasUberGunnerPower[id] ) return
	new wpnid = read_data(2)
	if (wpnid == CSW_M4A1) {
		// Weapon Model change thanks to [CCC]Taz-Devil
		Entvars_Set_String(id, EV_SZ_viewmodel, "models/shmod/UberGunner_v_m4a1.mdl")
	}
}
//----------------------------------------------------------------------------------------------
public weaponChange(id)
{
	if ( !gHasUberGunnerPower[id] || !shModActive() ) return

	new wpnid = read_data(2)
	new clip = read_data(3)

	if ( wpnid != CSW_M4A1 ) return

	switchmodel(id)

	// Never Run Out of Ammo!
	if ( clip == 0 ) {
		shReloadAmmo(id)
	}
}
//----------------------------------------------------------------------------------------------
public UberGunner_damage(id)
{
	if (!shModActive() || !is_user_alive(id)) return

	new damage = read_data(2)
	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
	new headshot = bodypart == 1 ? 1 : 0

	if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return

	if ( gHasUberGunnerPower[attacker] && weapon == CSW_M4A1 && is_user_alive(id) ) {
		// do extra damage
		new extraDamage = floatround(damage * get_cvar_float("UberGunner_m4a1mult") - damage)
		if (extraDamage > 0) shExtraDamage( id, attacker, extraDamage, "m4a1", headshot )
	}
}
//----------------------------------------------------------------------------------------------
public UberGunner_sound(id)
{
	//new SND_STOP=(1<<5)
	emit_sound(id, CHAN_AUTO, gUberGunnerSound, 0.2, ATTN_NORM, 0, PITCH_NORM)
	emit_sound(id, CHAN_AUTO, gUberGunnerSound, 0.2, ATTN_NORM, 0, PITCH_NORM)
}
//----------------------------------------------------------------------------------------------
public UberGunner_morph(id)
{
	if ( gmorphed[id] || !is_user_alive(id) ) return

	#if defined AMXX_VERSION
	cs_set_user_model(id, "UberGunner")
	#else
	CS_SetModel(id, "UberGunner")
	#endif

	UberGunner_sound(id)

	// Message
	set_hudmessage(50, 205, 50, -1.0, 0.40, 2, 0.02, 4.0, 0.01, 0.1, 7)
	show_hudmessage(id, "UberGunner - Getting Ready 2 Own!")

	gmorphed[id] = true
}
//----------------------------------------------------------------------------------------------
public UberGunner_unmorph(id)
{
	if ( gmorphed[id] ) {
		// Message
		set_hudmessage(50, 205, 50, -1.0, 0.40, 2, 0.02, 4.0, 0.01, 0.1, 7)
		show_hudmessage(id, "UberGunner - MODE OFF, you returned to normal self.")

		#if defined AMXX_VERSION
		cs_reset_user_model(id)
		#else
		CS_ClearModel(id)
		#endif

		UberGunner_sound(id)

		gmorphed[id] = false

		if ( get_cvar_num("UberGunner_teamglow") ) {
			remove_task(id+gTaskID)
			set_user_rendering(id)
		}
	}
}
//----------------------------------------------------------------------------------------------
public UberGunner_glow(id)
{
	id -= gTaskID

	if ( !is_user_connected(id) ) {
		//Don't want any left over residuals
		remove_task(id+gTaskID)
		return
	}

	if ( gHasUberGunnerPower[id] && is_user_alive(id)) {
		if ( get_user_team(id) == 1 ) {
			shGlow(id, 255, 0, 0)
		}
		else {
			shGlow(id, 0, 0, 255)
		}
	}
}
//----------------------------------------------------------------------------------------------
public UberGunner_death()
{
	new id = read_data(2)
	UberGunner_unmorph(id)
}
//----------------------------------------------------------------------------------------------
public client_connect(id)
{
	gmorphed[id] = false
}
//----------------------------------------------------------------------------------------------
