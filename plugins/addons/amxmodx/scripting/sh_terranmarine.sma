// TERRAN MARINE! from StarCraft video games - get stim packs that make you run fast at cost of hp and overburn.
// "Stim Packs are a concentrated dose of synthetic adrenalin and painkillers that allow Firebats and Marines to move faster..."

/* CVARS - copy and paste to shconfig.cfg

//Terran Marine
terran_level 0
terran_stimtime 8	//# of seconds the Stim Pack lasts (Default 8)
terran_stimspeed 550	//Speed at which Terran Marine runs when Stimmed (Default 550)
terran_stimcost 25	//Amount of health lost for using Stim, set 0 to not use hp (Default 25)
terran_cooldown 25	//# of seconds before Terran Marine can Stim again after stim ends (Default 25)
terran_stuntime 3	//# of seconds Overburn lasts after stim ends, set 0 to disable (Default 3)
terran_stunspeed 150	//Speed at which Terran Marine runs when in Overburn (Default 150)

*/

/*
* v1.2 - vittu - 2/19/07
*      - Quick fix to amxx 1.75 and above only.
*
* v1.1 - vittu - 6/21/06
*      - Re-coded to work properly, kept basic premise.
*      - Renamed hero from Marine to Terran Marine and renamed cvars.
*      - Added sounds.
*
*   Hero Created by scoutPractice.
*   Extra sound is the Catalyst Pack sound from Natural Selection. http://www.unknownworlds.com/ns/
*/

#include <amxmodx>
#include <fakemeta>
#include <superheromod>

// GLOBAL VARIABLES
new HeroName[] = "Terran Marine"
new bool:HasTerranMarine[SH_MAXSLOTS+1]
new LastWeap[SH_MAXSLOTS+1]
new StimTimer[SH_MAXSLOTS+1]
new StimSound[] = "shmod/terran_stim.wav"
new OverBurnSound[] = "player/breathe2.wav"
new Float:StimSpeed
new TimerHudSync
new CvarStimTime, CvarStimSpeed, CvarStimCost
new CvarCooldown, CvarOverburnTime, CvarOverburnSpeed
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Terran Marine", "1.2", "scoutPractice/vittu")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("terran_level", "0")
	CvarStimTime = register_cvar("terran_stimtime", "8")
	CvarStimSpeed = register_cvar("terran_stimspeed", "550")
	CvarStimCost = register_cvar("terran_stimcost", "25")
	CvarCooldown = register_cvar("terran_cooldown", "25")
	CvarOverburnTime = register_cvar("terran_stuntime", "3")
	CvarOverburnSpeed = register_cvar("terran_stunspeed", "150")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	shCreateHero(HeroName, "Stim Pack", "You will run much faster when stimmed", true, "terran_level")

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// INIT
	register_srvcmd("terran_init", "terran_init")
	shRegHeroInit(HeroName, "terran_init")

	// KEY DOWN
	register_srvcmd("terran_kd", "terran_kd")
	shRegKeyDown(HeroName, "terran_kd")

	// EVENTS
	register_event("ResetHUD", "new_spawn", "be")
	register_event("CurWeapon", "cur_weapon", "be", "1=1")
	register_event("DeathMsg", "terran_death", "a")

	// HUD SYNC
	TimerHudSync = CreateHudSyncObj()

	// LOOP
	set_task(1.0, "terran_loop", 0, "", 0, "b")
}
//----------------------------------------------------------------------------------------------
public plugin_precache()
{
	precache_sound(StimSound)
	precache_sound(OverBurnSound)
}
//----------------------------------------------------------------------------------------------
public terran_init()
{
	// First Argument is an id
	new temp[6]
	read_argv(1, temp, 5)
	new id = str_to_num(temp)

	// 2nd Argument is 0 or 1 depending on whether the id has the hero
	read_argv(2, temp, 5)
	new hasPowers = str_to_num(temp)

	// Make sure looop doesn't fire for them
	StimTimer[id] = -1

	switch(hasPowers)
	{
		case true:
			HasTerranMarine[id] = true

		case false:
		{
			if ( is_user_alive(id) && HasTerranMarine[id] )
				shResetSpeed(id)

			HasTerranMarine[id] = false
		}
	}
}
//----------------------------------------------------------------------------------------------
public new_spawn(id)
{
	terran_clean_up(id)

	if ( shModActive() && is_user_alive(id) && HasTerranMarine[id] )
		shResetSpeed(id)
}
//----------------------------------------------------------------------------------------------
// RESPOND TO KEYDOWN
public terran_kd()
{
	if ( !hasRoundStarted() )
		return

	// First Argument is an id
	new temp[6]
	read_argv(1, temp, 5)
	new id = str_to_num(temp)

	if ( !is_user_alive(id) )
		return

	// Let them know they already used their ultimate if they have
	if ( gPlayerUltimateUsed[id] )
	{
		playSoundDenySelect(id)
		return
	}

	// Make sure they're not in the middle of stim already
	if ( StimTimer[id] >= 0 )
		return

	// Make sure they have enough hp to use a stim
	new stimHpCost = get_pcvar_num(CvarStimCost)
	if ( stimHpCost > 0 )
	{
		new currentHealth = get_user_health(id)

		if ( currentHealth <= stimHpCost )
		{
			playSoundDenySelect(id)
			client_print(id, print_chat, "[SH](%s) You need more than %d HP to use a Stim Pack or you would die!", HeroName, stimHpCost)
			return
		}
		else
		{
			set_hudmessage(255, 0, 0, -1.0, 0.27, 0, 1.0, 3.0, 0.0, 0.0, -1)
			show_hudmessage(id, "Stim Pack injected, %d HP consumed", stimHpCost)

			set_user_health(id, (currentHealth - stimHpCost))
		}
	}

	StimTimer[id] = get_pcvar_num(CvarStimTime)

	StimSpeed = get_pcvar_float(CvarStimSpeed)
	
	new Float:currentSpeed
	pev(id, pev_maxspeed, currentSpeed)

	if ( currentSpeed < StimSpeed )
		engfunc(EngFunc_SetClientMaxspeed, id, StimSpeed)

	emit_sound(id, CHAN_STATIC, StimSound, 1.0, ATTN_NORM, 0, PITCH_NORM)
}
//----------------------------------------------------------------------------------------------
public terran_loop()
{
	for ( new id = 1; id <= SH_MAXSLOTS; id++ )
	{
		if ( HasTerranMarine[id] && is_user_alive(id) )
		{
			if ( StimTimer[id] > 0 )
			{
				if ( !shModActive() )
				{
					sh_stop_terranmarine(id)
					return
				}

				set_hudmessage(255, 0, 0, -1.0, 0.3, 0, 0.0, 2.0, 0.0, 0.0)
				ShowSyncHudMsg(id, TimerHudSync, "%d second%s left from Stim Pack^nBeware of Overburn", StimTimer[id], StimTimer[id] == 1 ? "" : "s")

				StimTimer[id]--
			}
			else if ( StimTimer[id] == 0 )
			{
				if ( !shModActive() )
				{
					sh_stop_terranmarine(id)
					return
				}

				// Set cooldown before setting timer to -1, so it can be checked in keydown
				new Float:stimCooldown = get_pcvar_float(CvarCooldown)
				if ( stimCooldown > 0.0 )
				{
					set_hudmessage(255, 0, 0, -1.0, 0.27, 0, 1.0, 3.0, 0.0, 0.0, -1)
					show_hudmessage(id, "Next available Stim Pack in %d second%s", floatround(stimCooldown), stimCooldown == 1.0 ? "" : "s")
					ultimateTimer(id, stimCooldown)
				}

				StimTimer[id] = -1

				// Stun player or just reset his speed?
				new overburnTime = get_pcvar_num(CvarOverburnTime)
				if ( overburnTime > 0 )
				{
					emit_sound(id, CHAN_STATIC, OverBurnSound, VOL_NORM, ATTN_NORM, 0, PITCH_HIGH)

					// Add a second to remove the sound to compensate for sh timer of stun
					set_task((overburnTime+1.0), "stop_overburn_snd", id)

					// Set speed of stun first to be safe
					engfunc(EngFunc_SetClientMaxspeed, id, get_pcvar_float(CvarOverburnSpeed))
					shStun(id, overburnTime)
				}
				else
				{
					shResetSpeed(id)
				}
			}
		}
	}
}
//----------------------------------------------------------------------------------------------
public stop_overburn_snd(id)
{
	if ( !is_user_connected(id) )
		return

	emit_sound(id, CHAN_STATIC, OverBurnSound, 0.0, ATTN_NORM, SND_STOP, PITCH_HIGH)
}
//----------------------------------------------------------------------------------------------
public cur_weapon(id)
{
	if ( !shModActive() || !HasTerranMarine[id] )
		return

	new wpnId = read_data(2)

	if ( LastWeap[id] != wpnId )
	{
		new Float:currentSpeed
		pev(id, pev_maxspeed, currentSpeed)

		if ( StimTimer[id] >= 0 && currentSpeed < StimSpeed )
			engfunc(EngFunc_SetClientMaxspeed, id, StimSpeed)
	}

	LastWeap[id] = wpnId
}
//----------------------------------------------------------------------------------------------
public terran_death()
{
	new id = read_data(2)

	if ( id <= 0 || id > SH_MAXSLOTS ) return

	terran_clean_up(id)
}
//----------------------------------------------------------------------------------------------
public client_connect(id)
{
	HasTerranMarine[id] = false
}
//----------------------------------------------------------------------------------------------
terran_clean_up(id)
{
	StimTimer[id] = -1

	gPlayerUltimateUsed[id] = false

	// Remove the sound if in Overburn
	if ( task_exists(id) )
	{
		remove_task(id)
		stop_overburn_snd(id)
	}
}
//----------------------------------------------------------------------------------------------
sh_stop_terranmarine(id)
{
	StimTimer[id] = -1

	if ( !is_user_alive(id) )
		return

	// This will switch weapons to reset speed when sh is turned off during a round
	new clip, ammo, weaponID = get_user_weapon(id, clip, ammo)

	engclient_cmd(id, "weapon_knife")

	shSwitchWeaponID(id, weaponID)
}
//----------------------------------------------------------------------------------------------