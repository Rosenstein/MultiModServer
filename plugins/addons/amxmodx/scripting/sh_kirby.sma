/* CVARS - copy and paste to shconfig.cfg

//Kirby
kirby_level 0
kirby_gravity 0.12			//Gravity
kirby_radius 40			//radius of smash
kirby_speed 2.75			//speed he crashes down!
kirby_damage 80			//damage of smash
kirby_damageradius 15		//damage given in radius of smash
kirby_delay 8				//delay til drop (decisecs)

*/

#include <amxmod>
#include <superheromod>
#include <Vexd_Utilities>

// VARIABLES
new gHeroName[]="Kirby"
new gHasKirbyPower[SH_MAXSLOTS+1]
new KirbyDelay, gSpriteWhite, gRed, gGreen, gBlue, intensity
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Kirby","1.17.5","ArtofDrowning07")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("kirby_level", "0" )
	register_cvar("kirby_gravity", "0.12" )
	register_cvar("kirby_radius", "50")
	register_cvar("kirby_speed", "2.75")
	register_cvar("kirby_damage", "80")
	register_cvar("kirby_damageradius", "15")
	register_cvar("kirby_delay", "8")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	shCreateHero(gHeroName, "Drop Smash!", "Jump in the air and press the binded key to smash onto your enemies!", true, "kirby_level" )

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// INIT
	register_srvcmd("kirby_init", "kirby_init")
	shRegHeroInit(gHeroName, "kirby_init")

	// KEY DOWN
	register_srvcmd("kirby_kd", "kirby_kd")
	shRegKeyDown(gHeroName, "kirby_kd")

	// Let Server know about kirbys Variable
	// It is possible that another hero has less gravity
	// so rather than just setting these - let the superhero module decide each round
	shSetMinGravity(gHeroName, "kirby_gravity" )
}
//----------------------------------------------------------------------------------------------
public kirby_init()
{
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id = str_to_num(temp)

	// 2nd Argument is 0 or 1 depending on whether the id has flash
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)
	gHasKirbyPower[id] = (hasPowers != 0)

	// Got to remove powers from a kirby that lost his powers...
	if ( !hasPowers && is_user_alive(id) ) {
		shRemGravityPower(id)
		remove_task(id)
	}
}
//----------------------------------------------------------------------------------------------
public plugin_precache(){
	gSpriteWhite = precache_model("sprites/white.spr")
	precache_sound("debris/bustconcrete2.wav")
	precache_model("models/player/big_rock/big_rock.mdl")
}
//----------------------------------------------------------------------------------------------
public kirby_kd()
{
	new tempvel[3]
	new Float:velocity[3]
	new temp[6]
	read_argv(1,temp,5)
	new id=str_to_num(temp)

	if ( !is_user_alive(id) || !gHasKirbyPower[id] || !hasRoundStarted() || get_user_godmode(id)==1) return PLUGIN_CONTINUE

	Entvars_Get_Vector(id, EV_VEC_velocity, velocity)
	if ( velocity[2] >= -10.0 && velocity[2] <= 10.0 )
	{
		playSoundDenySelect(id)
		return PLUGIN_CONTINUE
	}
	tempvel[0]=floatround(velocity[0])
	tempvel[1]=floatround(velocity[1])
	tempvel[2]=floatround(velocity[2])
	KirbyDelay=get_cvar_num("kirby_delay")
	gRed=255
	gGreen=128
	gBlue=192
	intensity=80
	set_task(0.1,"kirby_flash",id,tempvel,0,"b")
	return PLUGIN_CONTINUE
}
//----------------------------------------------------------------------------------------------
public check_ground(id, parm[3])
{
	new Float:velocity[3]
	new Float:oldvel[3]
	Entvars_Get_Vector(id, EV_VEC_velocity, velocity)
	if ( (velocity[2] == 0.0) )
	{
		#if defined AMXX_VERSION
		cs_reset_user_model(id)
		#else
		CS_ClearModel(id)
		#endif

		set_user_godmode(id,0)
		set_user_gravity(id,get_cvar_float("kirby_gravity"))
		new userOrigin[3], victimOrigin[3]
		new distanceBetween
		new kirbyRadius = get_cvar_num("kirby_radius")
		get_user_origin(id,userOrigin)
		for ( new x = 1; x <= SH_MAXSLOTS; x++)
		{
			if ( (is_user_alive(x) && get_user_team(id) != get_user_team(x)) || x==id)
			{
				get_user_origin(x,victimOrigin)
				message_begin(MSG_ONE,SVC_TEMPENTITY,userOrigin,id)
				write_byte( 21 )
				write_coord(userOrigin[0])
				write_coord(userOrigin[1])
				write_coord(userOrigin[2] + 16)
				write_coord(userOrigin[0])
				write_coord(userOrigin[1])
				write_coord(userOrigin[2] + kirbyRadius )
				write_short( gSpriteWhite )
				write_byte( 0 ) // startframe
				write_byte( 1 ) // framerate
				write_byte( 8 ) // 3 life 2
				write_byte( 4 ) // width 16
				write_byte( 1 ) // noise
				write_byte( 128 ) // r
				write_byte( 64 ) // g
				write_byte( 0 ) // b
				write_byte( 192 ) //brightness
				write_byte( 0 ) // speed
				message_end()
				distanceBetween = get_distance(userOrigin, victimOrigin )
				if ( distanceBetween < kirbyRadius)
				{
					set_user_rendering(id, kRenderFxGlowShell,0,0,0,kRenderNormal,0)
					sh_screenShake(x, 18, 8, 18 )
					emit_sound(x, CHAN_AUTO, "debris/bustconcrete2.wav", VOL_NORM, ATTN_NORM, 0, PITCH_NORM)
					if(x!=id)
					{
						new extraDamage
						if ( distanceBetween < 40)
						{
							extraDamage = get_cvar_num("kirby_damage")
							shExtraDamage( x, id, extraDamage, "Kirby Smash" )
						}
						else
						{
							extraDamage = get_cvar_num("kirby_damageradius")
							shExtraDamage( x, id, extraDamage, "Kirby Smash" )
						}
					}
				}
			}
		}
		oldvel[0]=float(parm[0])
		oldvel[1]=float(parm[1])
		oldvel[2]=float(parm[2])
		Entvars_Set_Vector(id, EV_VEC_velocity, oldvel)
		remove_task(id)
	}
}
//----------------------------------------------------------------------------------------------
public kirby_flash(id, parm[3])
{
	new Float:velocity[3]
	velocity[0]=0.0
	velocity[1]=0.0
	velocity[2]=0.0
	Entvars_Set_Vector(id, EV_VEC_velocity, velocity)
	if(intensity==0)
	{
		gRed=255
		gGreen=128
		gBlue=192
		intensity=75
	}
	else if(intensity==80)
	{
		gRed=0
		gGreen=0
		gBlue=0
		intensity=-5
	}
	intensity+=5
	set_user_rendering(id, kRenderFxGlowShell, gRed, gGreen, gBlue, kRenderNormal, intensity)
	KirbyDelay--
	if(KirbyDelay==0)
	{
		#if defined AMXX_VERSION
		cs_set_user_model(id, "big_rock")
		#else
		CS_SetModel(id, "big_rock")
		#endif
		set_user_godmode(id,1)
		set_user_gravity(id,get_cvar_float("kirby_speed"))
		remove_task(id)
		set_task(0.1,"check_ground",id,parm,0,"b")
	}
}
//----------------------------------------------------------------------------------------------