//Spy!

/* Cvars -- copy and paste into shconfig.cfg

//Spy
spy_level 10

*/

#include <amxmodx>
#include <engine>
#include <superheromod>

#define Spy_FOV 120
#define ChangeFOV 0
#define MAXPLAYERS 32

#define CS_TEAM_CT 2
#define CS_TEAM_T 1

new g_MaxPlayers
new g_MsgBombDrop
new g_MsgHostagePos
#if ChangeFOV == 1
new g_MsgSetFov
new g_IsZooming[MAXPLAYERS+1]
#endif
new gHeroName[]="Spy"
new bool:gHasSpyPowers[SH_MAXSLOTS+1]
//----------------------------------------------------------------------------------------------
public plugin_init() 
{
	register_plugin("SUPERHERO Spy", "1.0", "-]Tical2k[- DooM")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("spy_level", "10")
	
	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	shCreateHero(gHeroName, "Detection", "See the closest enemy on the radar!", false, "spy_level")

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// INIT
	register_srvcmd("spy_init", "spy_init")
	shRegHeroInit(gHeroName, "spy_init")

#if ChangeFOV == 1
	register_event("SetFOV","Event_Zoomed","be","1<90")
	register_event("SetFOV","Event_UnZoomed","be","1=90")
	
	g_MsgSetFov = get_user_msgid("SetFOV")
#endif	
	g_MaxPlayers = get_maxplayers()
	g_MsgBombDrop   = get_user_msgid("BombDrop")
	g_MsgHostagePos = get_user_msgid("HostagePos")
}
//----------------------------------------------------------------------------------------------
public spy_init()
{
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id = str_to_num(temp)

	// 2nd Argument is 0 or 1 depending on whether the id has the hero
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)

	gHasSpyPowers[id] = (hasPowers != 0)

	set_task(1.0,"Task_UpdateRadar",id,_,_,"b")
	AddEffect(id)
#if ChangeFOV == 1	
	if(g_IsZooming[id] == 0)
		SetFOV(id,Spy_FOV)
#endif		
}
//----------------------------------------------------------------------------------------------
public Task_UpdateRadar(id)
{
	new Closest = FindClosesFI(id)
	if(Closest > 0)
	{
		new Origin[3]
		get_user_origin(Closest,Origin)
		ShowOnRadar(id,Origin)
	}
}
#if ChangeFOV == 1
//----------------------------------------------------------------------------------------------
public Event_Zoomed(id)
{
	g_IsZooming[id] = 1
}
//----------------------------------------------------------------------------------------------
public Event_UnZoomed(id)
{
	g_IsZooming[id] = 0
	if(gHasSpyPowers[id] == 1)
		SetFOV(id,Spy_FOV)
}
#endif
//----------------------------------------------------------------------------------------------
stock FindClosesFI(id)
{
	new Team = get_user_team(id)
	new Float:Dist
	new Float:gf_ShortestDist = 4000.0
	new ShortestDistIndex

	for(new i=1;i<=g_MaxPlayers;i++) if(is_user_alive(i) && Team != get_user_team(i))
	{
		Dist = entity_range(id,i)

		if(Dist <= gf_ShortestDist)
		{
			gf_ShortestDist = Dist
			ShortestDistIndex = i
		}
	}
	return ShortestDistIndex
}
//----------------------------------------------------------------------------------------------
stock SetFOV(id,NewFOV)
{
	message_begin(MSG_ONE, g_MsgSetFov, {0,0,0}, id)
	write_byte(NewFOV)
	message_end()	
}
//----------------------------------------------------------------------------------------------
stock ShowOnRadar(id,Origin[3])
{
	new Team = get_user_team(id)
	if(Team == CS_TEAM_T)
	{
		message_begin(MSG_ONE, g_MsgBombDrop, {0,0,0}, id)
		write_coord(Origin[0])	//X Coordinate
		write_coord(Origin[1])	//Y Coordinate
		write_coord(Origin[2])	//Z Coordinate
		write_byte(0)			//?? This byte seems to always be 0...so, w/e
		message_end()
	}
	else if(Team == CS_TEAM_CT)
	{
		message_begin(MSG_ONE, g_MsgHostagePos, {0,0,0}, id)
		write_byte(1)			//No idea what this byte does; I think it has something to do with whether or not the hostage is following someone
		write_byte(1)			//The number of the hostage, 1-4
		write_coord(Origin[0])	//X Coordinate
		write_coord(Origin[1])	//Y Coordinate
		write_coord(Origin[2])	//Z Coordinate
		message_end()
	}
}
//----------------------------------------------------------------------------------------------
public API_RoundStarted()
{
	for(new i=1;i<=g_MaxPlayers;i++) if(gHasSpyPowers[i])
	{
		AddEffect(i)
	}
}
//----------------------------------------------------------------------------------------------
stock AddEffect(id)
{
	set_rendering(id,kRenderFxNone, 0,0,0,kRenderTransTexture,25)
}
//----------------------------------------------------------------------------------------------
stock RemoveEffect(id)
{
	set_rendering(id,kRenderFxNone, 0,0,0,kRenderNormal,16)
}
//----------------------------------------------------------------------------------------------