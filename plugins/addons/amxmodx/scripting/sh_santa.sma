// Santa Claus! - Santa gone bad! 

/* CVARS - copy and paste to shconfig.cfg 

//Santa Claus 
santa_level 0                   // Level of Santa 
santa_teamglow 0            // Does He Glow? 
santa_ak47mult 1.9          // Damage Multiplier For His AK47 
santa_health 250              // Amount of HP he has 
santa_armor 500              // Amount of AP he has 
santa_gravity .20              // Whats his gravity? 
santa_speed 690               // How fast does he run 

*/ 

#include <amxmod> 
#include <vexd_utilities> 
#include <superheromod> 

// GLOBAL VARIABLES 
new gHeroName[]="Santa Claus" 
new bool:gHasSantaClausPower[SH_MAXSLOTS+1] 
new bool:gmorphed[SH_MAXSLOTS+1] 
new gTaskID 
//---------------------------------------------------------------------------------------------- 
public plugin_init() 
{ 
   // Plugin Info 
   register_plugin("SUPERHERO Santa Claus", "1.0", "ClanNbs") 

   // Ripped from vittu's Master Chief 

   // DO NOT EDIT THIS FILE TO CHANGE/ CVARS, USE THE SHCONFIG.CFG 
   register_cvar("santa_level", "0") 
   register_cvar("santa_teamglow", "0") 
   register_cvar("santa_ak47mult", "1.9") 
   register_cvar("santa_health", "250") 
   register_cvar("santa_armor", "500") 
   register_cvar("santa_gravity", ".20") 
   register_cvar("santa_speed", "690") 


   // FIRE THE EVENT TO CREATE THIS SUPERHERO! 
   shCreateHero(gHeroName, "Santa Claus", "Santa Claus has extra hp extra ap extra speed lower gravity and more damage for ak47.", false, "santa_level" ) 

   // REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS) 
   // INIT 
   register_srvcmd("santa_init", "santa_init") 
   shRegHeroInit(gHeroName, "santa_init") 

   register_event("ResetHUD", "newSpawn", "b") 
   register_event("CurWeapon", "weaponChange", "be", "1=1") 
   register_event("Damage", "santa_damage", "b", "2!0") 
   register_event("DeathMsg", "santa_death", "a") 

   //Set a random number to the looping task so it can be removed without conflict 
   gTaskID = random_num(10181, 100000) 

   // Let Server know about Santa Claus's Variables 
   shSetShieldRestrict(gHeroName) 
   shSetMaxHealth(gHeroName, "santa_health") 
   shSetMaxArmor(gHeroName, "santa_armor") 
   shSetMinGravity(gHeroName, "santa_gravity") 
   shSetMaxSpeed(gHeroName, "santa_speed", "[0]") 
} 
//---------------------------------------------------------------------------------------------- 
public plugin_precache() 
{ 
   precache_model("models/player/santa/santa.mdl")  
   return PLUGIN_CONTINUE 
} 
//---------------------------------------------------------------------------------------------- 
public santa_init() 
{ 
   // First Argument is an id 
   new temp[6] 
   read_argv(1,temp,5) 
   new id = str_to_num(temp) 

   // 2nd Argument is 0 or 1 depending on whether the id has Santa Claus 
   read_argv(2,temp,5) 
   new hasPowers = str_to_num(temp) 

   gHasSantaClausPower[id] = (hasPowers != 0) 

   //Reset thier shield restrict status 
   //Shield restrict MUST be before weapons are given out 
   shResetShield(id) 

   if ( is_user_connected(id) ) { 
      if ( gHasSantaClausPower[id] ) { 
         santa_weapons(id)  
         santa_tasks(id) 
      } 
      else { 
         engclient_cmd(id, "drop", "weapon_ak47") 
         santa_unmorph(id) 
         shRemHealthPower(id) 
         shRemArmorPower(id) 
         shRemGravityPower(id) 
         shRemSpeedPower(id) 
      } 
   } 
} 
//---------------------------------------------------------------------------------------------- 
public newSpawn(id) 
{ 
   if ( gHasSantaClausPower[id] && is_user_alive(id) && shModActive() ) { 
      set_task(0.1, "santa_weapons", id) 
      santa_tasks(id) 

      new wpnid = read_data(2) 
      if (wpnid != CSW_AK47 && wpnid > 0) { 
         new wpn[32] 
         get_weaponname(wpnid,wpn,31) 
         engclient_cmd(id,wpn) 
      } 
   } 
} 
//---------------------------------------------------------------------------------------------- 
public santa_tasks(id) 
{ 
   set_task(1.0, "santa_morph", id) 

   if( get_cvar_num("santa_teamglow") ){ 
      set_task(1.0, "santa_glow", id+gTaskID, "", 0, "b" ) 
   } 

} 
//---------------------------------------------------------------------------------------------- 
public santa_weapons(id) 
{ 
   if ( is_user_alive(id) ) { 
      shGiveWeapon(id,"weapon_ak47") 
   } 
} 
//----------------------------------------------------------------------------------------------  
public weaponChange(id) 
{ 
   if ( !gHasSantaClausPower[id] || !shModActive() ) return 

   new wpnid = read_data(2) 
   new clip = read_data(3) 

   if ( wpnid != CSW_AK47 ) return  

   // Never Run Out of Ammo! 
   if ( clip == 0 ) { 
      shReloadAmmo(id) 
   } 
} 
//---------------------------------------------------------------------------------------------- 
public santa_damage(id) 
{ 
   if (!shModActive() || !is_user_alive(id)) return 

   new damage = read_data(2) 
   new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart) 
   new headshot = bodypart == 1 ? 1 : 0 

   if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return 

   if ( gHasSantaClausPower[attacker] && weapon == CSW_AK47 && is_user_alive(id) ) { 
      // do extra damage 
      new extraDamage = floatround(damage * get_cvar_float("santa_ak47mult") - damage) 
      if (extraDamage > 0) shExtraDamage( id, attacker, extraDamage, "ak47", headshot ) 
   } 
} 
//---------------------------------------------------------------------------------------------- 
public santa_morph(id) 
{ 
   if ( gmorphed[id] || !is_user_alive(id) ) return 

   #if defined AMXX_VERSION 
   cs_set_user_model(id, "santa") 
   #else 
   CS_SetModel(id, "santa") 
   #endif 

   // Message 
   set_hudmessage(50, 205, 50, -1.0, 0.40, 2, 0.02, 4.0, 0.01, 0.1, 7) 
   show_hudmessage(id, "Santa Claus - Ho Ho Ho") 

   gmorphed[id] = true 
} 
//---------------------------------------------------------------------------------------------- 
public santa_unmorph(id) 
{ 
   if ( gmorphed[id] ) { 
      // Message 
      set_hudmessage(50, 205, 50, -1.0, 0.40, 2, 0.02, 4.0, 0.01, 0.1, 7) 
      show_hudmessage(id, "Santa Claus -you returned to normal self.") 

      #if defined AMXX_VERSION 
      cs_reset_user_model(id) 
      #else 
      CS_ClearModel(id) 
      #endif 

      gmorphed[id] = false 

      if ( get_cvar_num("santa_teamglow") ) { 
         remove_task(id+gTaskID) 
         set_user_rendering(id) 
      } 
   } 
} 
//---------------------------------------------------------------------------------------------- 
public santa_glow(id) 
{ 
   id -= gTaskID 

   if ( !is_user_connected(id) ) { 
      //Don't want any left over residuals 
      remove_task(id+gTaskID) 
      return 
   } 

   if ( gHasSantaClausPower[id] && is_user_alive(id)) { 
      if ( get_user_team(id) == 1 ) { 
         shGlow(id, 255, 0, 0) 
      } 
      else { 
         shGlow(id, 0, 0, 255) 
      } 
   } 
} 
//---------------------------------------------------------------------------------------------- 
public santa_death() 
{ 
   new id = read_data(2) 
   santa_unmorph(id) 
} 
//---------------------------------------------------------------------------------------------- 
public client_connect(id) 
{ 
   gmorphed[id] = false 
} 
//----------------------------------------------------------------------------------------------