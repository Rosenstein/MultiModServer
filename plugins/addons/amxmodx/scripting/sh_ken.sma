// Ken!!! From Street Fighter Games and Series!!
// Uppercut is based on hero Scorpion by ReVeNgIsT/yang/vittu

#include <amxmod>
#include <superheromod>
#include <Vexd_Utilities>
#include <hlsdk_const>

/*

//Ken
ken_level 4
ken_upcdamage 30		// Damage of uppercut (default 30)
ken_upcheight 380		// Height of jump when using uppercut (default 380)
ken_upcheight2 600		// Height of victim blown (default 600)

*/

// GLOBAL VARIABLES
new gHeroName[]="Ken"
new bool:g_HasKenPower[SH_MAXSLOTS+1]
new UppercutEffect[SH_MAXSLOTS+1]
new Float:jumpVeloc[33][3]
new bool:doUppercut[33]

new gSpriteFire
//-------------------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Ken", "2.1", "Neogaiden(z)/Strife")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("ken_level", "4")
	register_cvar("ken_upcdamage", "30")
	register_cvar("ken_upcheight","380")
	register_cvar("ken_upcheight2","600")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	shCreateHero(gHeroName, "Shoryuken", "Press Keydown to use Uppercut", true, "ken_level")

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// INIT
	register_srvcmd("ken_init", "ken_init")
	shRegHeroInit(gHeroName, "ken_init")

	// NEW SPAWN
	register_event("ResetHUD", "newSpawn", "b")

	// Key Down
	register_srvcmd("ken_kd", "ken_kd")
	shRegKeyDown(gHeroName, "ken_kd")

	// Key Up
	register_srvcmd("ken_ku", "ken_ku")
	shRegKeyUp(gHeroName, "ken_ku")

	// Death
	register_event("DeathMsg", "ken_death", "a")
}
//-------------------------------------------------------------------------------------------------------
public ken_init()
{
	// First Argument is an id
	new temp[6]
	read_argv(1, temp, 5)
	new id = str_to_num(temp)

	// 2nd Argument is 0 or 1 depending on whether the id has ken Powers
	read_argv(2, temp, 5)
	new hasPowers=str_to_num(temp)

	g_HasKenPower[id] = (hasPowers != 0)
}
//-------------------------------------------------------------------------------------------------------
public plugin_precache()
{
	precache_sound("shmod/kenshoryuken.wav")
	precache_sound("player/headshot3.wav")

	// Sprite Fire = Set Self On Fire When Using Uppercut
	gSpriteFire = precache_model("sprites/kenupc.spr")
}
//-------------------------------------------------------------------------------------------------------
//KEYDOWN
public ken_kd()
{

	if ( !hasRoundStarted() )
	return

	// First Argument is an id
	new temp[6]
	read_argv(1, temp, 5)
	new id = str_to_num(temp)

	if ( !g_HasKenPower[id] || !is_user_alive(id) )
	return

	// Use Uppercut
	doUppercut[id] = true
}
//-------------------------------------------------------------------------------------------------------
//KEYUP
public ken_ku()
{
	// First Argument is an id
	new temp[6]
	read_argv(1, temp, 5)
	new id = str_to_num(temp)

	doUppercut[id] = false
	UppercutEffect[id] = false
}
//-------------------------------------------------------------------------------------------------------
public ken_death()
{
	new id = read_data(2)

	doUppercut[id] = false
	UppercutEffect[id] = false
}
//-------------------------------------------------------------------------------------------------------
public newSpawn(id)
{
	doUppercut[id] = false
	UppercutEffect[id] = false
}
//-------------------------------------------------------------------------------------------------------
public uppercut(parm[])
{
	new id = parm[0]
	new vic = parm[1]
	new Origin[3], vicOrigin[3]

	if (g_HasKenPower[id] && UppercutEffect[id])
	get_user_origin(id, Origin)
	get_user_origin(vic, vicOrigin)

	emit_sound(vic, CHAN_BODY, "player/headshot3.wav", 1.0, ATTN_NORM, 0, PITCH_LOW)

	new Float:fl_Time = get_distance(vicOrigin, Origin) / 150.0

	new Float:fl_vicVelocity[3]
	fl_vicVelocity[0] = (vicOrigin[0] - Origin[0]) / fl_Time
	fl_vicVelocity[1] = (vicOrigin[1] - Origin[1]) / fl_Time
	fl_vicVelocity[2] = (get_cvar_float("ken_upcheight2"))

	Entvars_Set_Vector(vic, EV_VEC_velocity, fl_vicVelocity)

	shExtraDamage(vic, id, get_cvar_num("ken_upcdamage"), "Shoryuken")
}
//-------------------------------------------------------------------------------------------------------
#if defined AMX_NEW
public entity_touch(entity1, entity2) {
	new pToucher = entity1
	new pTouched = entity2
#else
public vexd_pfntouch(pToucher, pTouched) {
#endif

	if ( !is_user_alive(pToucher) || !is_user_alive(pTouched) ) return

	//if ( g_HasKenPower[pTouched] && UppercutEffect[pTouched]) {
	if ( UppercutEffect[pTouched]) {

	new ffOn = get_cvar_num("mp_friendlyfire")
	if ( ffOn || get_user_team(pToucher) != get_user_team(pTouched) ) {

	new parm[2]
	parm[0] = pTouched
	parm[1] = pToucher
	set_task(0.1, "uppercut", pTouched+1, parm, 2)
	}
	}
}
//-------------------------------------------------------------------------------------------------------
public OnFire(args[])
{
	new id = args[0]
	new vec[3]

	get_user_origin(id,vec)

	new iScale = random_num(8,30)

	// Set Self On Fire When Using Uppercut (SPRITE)
	message_begin( MSG_BROADCAST,SVC_TEMPENTITY)
	write_byte(17)
	write_coord(vec[0])
	write_coord(vec[1])
	write_coord(vec[2])
	write_short(gSpriteFire)
	write_byte(iScale)
	write_byte(100)
	message_end()

	message_begin( MSG_BROADCAST,SVC_TEMPENTITY)
	write_byte(17)
	write_coord(vec[0])
	write_coord(vec[1])
	write_coord(vec[2])
	write_short(gSpriteFire)
	write_byte(iScale)
	write_byte(100)
	message_end()
}
//-------------------------------------------------------------------------------------------------------
public client_PreThink(id)
{
	new Originx[3], vicOriginx[3]
	new flags = get_entity_flags(id)

	if(g_HasKenPower[id]) 
	{
		// Prevent Doing Uppercut Underwater (Prevent Bugs)
		if(entity_get_int(id, EV_INT_waterlevel))
		{
			doUppercut[id] = false
			UppercutEffect[id] = false
		}

		// Reset If Jumped
		if(!(flags & FL_ONGROUND)) 
		{
			doUppercut[id] = false
			UppercutEffect[id] = false
		}

		// Setup if Keydown is Pressed
		if(doUppercut[id] && (flags & FL_ONGROUND)) 
		{
			UppercutEffect[id] = false

			entity_get_vector(id, EV_VEC_velocity, jumpVeloc[id])

			get_user_origin(id, Originx)
			get_user_origin(id, vicOriginx)
			get_distance(vicOriginx, Originx) / 200.0

			jumpVeloc[id][0] = (vicOriginx[0] - Originx[0]) / 150.0
			jumpVeloc[id][1] = (vicOriginx[1] - Originx[1]) / 150.0
			jumpVeloc[id][2] = (get_cvar_float("ken_upcheight"))
		}
	}
}
//-------------------------------------------------------------------------------------------------------
public client_PostThink(id) 
{
	if(g_HasKenPower[id] && is_user_alive(id)) 
	{
		// Do Velocity if Jumped
		if(doUppercut[id] && (get_entity_flags(id) & FL_ONGROUND)) 
		{
			entity_set_vector(id, EV_VEC_velocity, jumpVeloc[id])
			
			doUppercut[id] = true
			UppercutEffect[id] = true

			// Set Self On Fire and Glow
			new args[2]
			args[0]=id
			set_task(0.1,"OnFire",0,args,2,"a",3)

			// Shout "Shoryuken!" Just Like In The Game
			emit_sound(id, CHAN_STATIC, "shmod/kenshoryuken.wav", 1.0, ATTN_NORM, 0, PITCH_NORM)
		}
	}
}
//-------------------------------------------------------------------------------------------------------