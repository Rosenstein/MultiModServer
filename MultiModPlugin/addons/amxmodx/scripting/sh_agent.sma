//  Agent! - The Dudes From The Matrix

/* CVARS - copy and paste to shconfig.cfg

//Agent
agent_level 4
agent_cooldown 10			//# of seconds before Agent can teleport again.
agent_teleportnum 3			//# of times Agent can teleport in a round
agent_spawndelay 15			//# of seconds player must wait at new round before teleporting

*/

#include <amxmod>
#include <Vexd_Utilities>
#include <superheromod>

// GLOBAL VARIABLES
new gHeroName[]="Agent (Matrix)"
new bool:SpawnDelay = false
new g_TeleCounter[SH_MAXSLOTS+1]
new bool:gHasAgentPower[SH_MAXSLOTS+1]
new g_savedOrigin[SH_MAXSLOTS+1][3]
new g_lastPosition[SH_MAXSLOTS+1][3]	   // Variable to help with position checking

//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Agent","1.2","AssKicR & -|-LoA-|-Bass")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("agent_level", "4" )
	register_cvar("agent_cooldown", "10" )
	register_cvar("agent_teleportnum", "3" )
	register_cvar("agent_spawndelay", "15" )

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	shCreateHero(gHeroName, "TelePort Menu", "TelePort Menu and Unlimited Desert Eagle Ammo", true, "agent_level")

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	register_event("ResetHUD","newRound","b")
	register_logevent("round_start", 2, "1=Round_Start")

	// REGISTER MENU
	register_menucmd(register_menuid("[SH](Agent)"),((1<<0)|(1<<1)|(1<<9)),"TeleMenuAction")

	// Weapon Change
	register_event("CurWeapon","changeWeapon","be","1=1")

	// KEY DOWN
	register_srvcmd("agent_kd", "agent_kd")
	shRegKeyDown(gHeroName, "agent_kd")

	// INIT
	register_srvcmd("agent_init", "agent_init")
	shRegHeroInit(gHeroName, "agent_init")
}
//----------------------------------------------------------------------------------------------
public agent_init()
{
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id=str_to_num(temp)

	// 2nd Argument is 0 or 1 depending on whether the id has Agent powers
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)
	gHasAgentPower[id] = (hasPowers != 0)

	if ( gHasAgentPower[id] ) {
		agent_deagle(id)
	}
	else {
		engclient_cmd(id,"drop","weapon_deagle")
	}
}
//----------------------------------------------------------------------------------------------
public newRound(id)
{
	g_TeleCounter[id] = get_cvar_num("agent_teleportnum")
	if ( gHasAgentPower[id]  ) {
		set_task(0.1, "agent_deagle",id)
	}
}
//----------------------------------------------------------------------------------------------
public round_start()
{
	new Float:delay = get_cvar_float("agent_spawndelay")
	if (delay > 0.0) {
		SpawnDelay = true
		set_task(delay,"roundstart_delay")
	}
}
//----------------------------------------------------------------------------------------------
public roundstart_delay()
{
	SpawnDelay = false
}
//----------------------------------------------------------------------------------------------
public client_connect(id)
{
	g_savedOrigin[id][0] = -999999
	g_savedOrigin[id][1] = -999999
	g_savedOrigin[id][2] = -999999
}
//----------------------------------------------------------------------------------------------
public agent_kd()
{
	// First Argument is an id with agent Powers!
	new temp[6]
	read_argv(1,temp,5)
	new id = str_to_num(temp)

	if ( !is_user_alive(id) || !gHasAgentPower[id] ) return PLUGIN_HANDLED

	// Let them know they already used their ultimate if they have
	if ( gPlayerUltimateUsed[id] ) {
		playSoundDenySelect(id)
		return PLUGIN_HANDLED
	}

	showMenu(id)

	return PLUGIN_HANDLED
}
//----------------------------------------------------------------------------------------------
public showMenu(id)
{
	new menuBody[512]
	new len = format(menuBody,511,"\y[SH](Agent) Teleport Menu:^n^n\w")
	len += format(menuBody[len],511-len,"1. Save Coordinates^n2. Teleport^n^n0. Exit")
	show_menu(id,((1<<0)|(1<<1)|(1<<9)),menuBody)
	return PLUGIN_HANDLED
}
//----------------------------------------------------------------------------------------------
public TeleMenuAction(id,key)
{
	switch(key) {
		case 0: {
			agent_saveOrigin(id)
		}
		case 1: {
			if ( !hasRoundStarted() || SpawnDelay ) {
				if (SpawnDelay) client_print(id,print_chat,"[SH](Agent) You must wait %d seconds after round start before teleporting",get_cvar_num("agent_spawndelay"))
				showMenu(id)
				return PLUGIN_HANDLED
			}

			if (g_savedOrigin[id][0] == -999999 && g_savedOrigin[id][1] == -999999 && g_savedOrigin[id][2] == -999999) {
				client_print(id,print_chat,"[SH](Agent) You must save coordinates before teleporting")
				showMenu(id)
				return PLUGIN_HANDLED
			}

			if ( g_TeleCounter[id] > 0 ) {
				g_TeleCounter[id]--
				new message[128]
				format(message, 127, "[SH](Agent) You Have %d Teleportations Left",g_TeleCounter[id])
				set_hudmessage(255,0,0,-1.0,0.3,0,0.25,1.0,0.0,0.0,26)
				show_hudmessage(id, message)
				ultimateTimer(id, get_cvar_float("agent_cooldown"))
				agent_teleport(id)
			}
			else if ( g_TeleCounter[id] <= 0 ) {
				set_hudmessage(255,0,0,-1.0,0.3,0,0.25,1.0,0.0,0.0,26)
				show_hudmessage(id, "[SH](Agent) You Have No Teleportations Left")
				gPlayerUltimateUsed[id] = true
			}
		}
		default: return PLUGIN_HANDLED
	}
	return PLUGIN_HANDLED
}
//----------------------------------------------------------------------------------------------
public agent_saveOrigin(id)
{
	get_user_origin(id,g_savedOrigin[id])
	client_print(id,print_chat,"[SH](Agent) Your Saved Coordinates Are: %i %i %i", g_savedOrigin[id][0],g_savedOrigin[id][1],g_savedOrigin[id][2])
	g_savedOrigin[id][2] += 8
}
//----------------------------------------------------------------------------------------------
public agent_teleport(id)
{
	new Origin[3]
	get_user_origin(id,Origin)

	//TE_TELEPORT Effects
	message_begin(MSG_BROADCAST,SVC_TEMPENTITY)
	write_byte(11)
	write_coord(Origin[0])
	write_coord(Origin[1])
	write_coord(Origin[2])
	message_end()

	//Teleport the player
	set_user_origin(id,g_savedOrigin[id])

	//TE_TELEPORT Effects
	message_begin(MSG_BROADCAST,SVC_TEMPENTITY)
	write_byte(11)
	write_coord(g_savedOrigin[id][0])
	write_coord(g_savedOrigin[id][1])
	write_coord(g_savedOrigin[id][2])
	message_end()

	positionChangeTimer(id)
}
//----------------------------------------------------------------------------------------------
public positionChangeTimer(id)
{
	if (!is_user_alive(id)) return

	get_user_origin(id, g_lastPosition[id], 0)

	new Float:velocity[3]
	Entvars_Get_Vector(id, EV_VEC_velocity, velocity)

	if ( velocity[0]==0.0 && velocity[1]==0.0 ) {
		// Force a Move (small jump)
		velocity[0] += 20.0
		velocity[2] += 100.0
		Entvars_Set_Vector(id, EV_VEC_velocity, velocity)
	}

	set_task(0.4,"positionChangeCheck",id)
}
//----------------------------------------------------------------------------------------------
public positionChangeCheck(id)
{
	new origin[3]

	if (!is_user_alive(id) ) return

	get_user_origin(id, origin, 0)
	// Kill this player if Stuck in Wall!
	if ( g_lastPosition[id][0] == origin[0] && g_lastPosition[id][1] == origin[1] && g_lastPosition[id][2] == origin[2] && is_user_alive(id) ) {
		user_kill(id)
		client_print(id,print_chat,"[SH](Agent) You were killed for getting stuck in a wall")
	}
}
//----------------------------------------------------------------------------------------------
public changeWeapon(id)
{
	if ( !gHasAgentPower[id] || !shModActive() ) return

	new wpnid = read_data(2)
	new clip = read_data(3)

	// Never Run Out of Ammo!
	if ( wpnid == CSW_DEAGLE && clip == 0 ) {
		shReloadAmmo(id)
	}
}
//----------------------------------------------------------------------------------------------
public agent_deagle(id)
{
	shGiveWeapon(id,"weapon_deagle")
}
//----------------------------------------------------------------------------------------------