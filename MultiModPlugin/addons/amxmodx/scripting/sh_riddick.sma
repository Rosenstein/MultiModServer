//Riddick

//This is basically just wolverine with a different model and different default CVAR settings
//Done as a request because someone else made it and refused to share

/* CVARS - copy and paste to shconfig.cfg

//Riddick
riddick_level 0
riddick_healpoints 5			//The # of HP healed per second
riddick_knifespeed 340			//Speed of riddick in knife mode
riddick_knifemult 1.8			//Multiplier for knife damage

*/

#include <amxmod>
#include <Vexd_Utilities>
#include <superheromod>

// GLOBAL VARIABLES
new gHeroName[]="Riddick"
new bool:ghasRiddickPowers[SH_MAXSLOTS+1]
new gPlayerMaxHealth[SH_MAXSLOTS+1]
new gHealPoints
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Riddick","1.0","JTP10181")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("riddick_level", "0" )
	register_cvar("riddick_healpoints", "3" )
	register_cvar("riddick_knifespeed", "290")
	register_cvar("riddick_knifemult", "1.35" )

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	shCreateHero(gHeroName, "Auto Heal + SuperKnife", "Auto-Heal, Knife Damage, Extra Knife Speed", false, "riddick_level" )

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	register_srvcmd("riddick_init", "riddick_init")
	shRegHeroInit(gHeroName, "riddick_init")

	// HEAL LOOP
	set_task(1.0,"riddick_loop",0,"",0,"b" )

	// EXTRA KNIFE DAMAGE
	register_event("Damage", "riddick_damage", "b", "2!0")

	// Kinfe Model
	register_event("ResetHUD", "newSpawn","b")
	register_event("CurWeapon", "weaponChange","be","1=1")

	// Let Server know about Woverines max knife speed
	shSetMaxSpeed(gHeroName, "riddick_knifespeed", "[29]" )

	//Makes superhero tell wolverine a players max health
	register_srvcmd("riddick_maxhealth", "riddick_maxhealth")
	shRegMaxHealth(gHeroName, "riddick_maxhealth" )
	gHealPoints = get_cvar_num("riddick_healpoints")
}
//----------------------------------------------------------------------------------------------
public plugin_precache()
{
	precache_model("models/shmod/riddick_knife.mdl")
}
//----------------------------------------------------------------------------------------------
public riddick_init()
{
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id=str_to_num(temp)

	// 2nd Argument is 0 or 1 depending on whether the id has wolverine skills
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)

	gPlayerMaxHealth[id] = 100
	ghasRiddickPowers[id] = (hasPowers!=0)

	switchmodel(id)

	// Got to slow down a Riddick that lost his powers...
	if ( !ghasRiddickPowers[id]  && is_user_connected(id) ) {
		shRemSpeedPower(id)
	}
}
//----------------------------------------------------------------------------------------------
public riddick_loop()
{
	if (!shModActive()) return
	for ( new id = 1; id <= SH_MAXSLOTS; id++ ) {
		if (  ghasRiddickPowers[id] && is_user_alive(id)  )   {
			// Let the server add the hps back since the # of max hps is controlled by it
			// I.E. Superman has more than 100 hps etc.
			shAddHPs(id, gHealPoints, gPlayerMaxHealth[id] )
		}
	}
}
//----------------------------------------------------------------------------------------------
public riddick_damage(id)
{
	if (!shModActive() || !is_user_alive(id)) return PLUGIN_CONTINUE

	new damage = read_data(2)
	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
	new headshot = bodypart == 1 ? 1 : 0

	if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return PLUGIN_CONTINUE

	if ( ghasRiddickPowers[attacker] && weapon == CSW_KNIFE && is_user_alive(id) ) {
		// do extra damage
		new extraDamage = floatround(damage * get_cvar_float("riddick_knifemult") - damage)
		if (extraDamage > 0) shExtraDamage( id, attacker, extraDamage, "knife", headshot )
	}
	return PLUGIN_CONTINUE
}
//----------------------------------------------------------------------------------------------
public riddick_maxhealth()
{
	new id[6]
	new health[9]

	read_argv(1,id,5)
	read_argv(2,health,8)

	gPlayerMaxHealth[str_to_num(id)] = str_to_num(health)
}
//----------------------------------------------------------------------------------------------
public newSpawn(id)
{
	if ( ghasRiddickPowers[id] && is_user_alive(id) && shModActive() ) {
		new clip, ammo, wpnid = get_user_weapon(id,clip,ammo)
		if (wpnid != CSW_KNIFE && wpnid > 0) {
			new wpn[32]
			get_weaponname(wpnid,wpn,31)
			engclient_cmd(id,wpn)
		}
	}
}
//----------------------------------------------------------------------------------------------
public switchmodel(id)
{
	if ( !is_user_alive(id) || !ghasRiddickPowers[id] ) return
	new clip, ammo, wpnid = get_user_weapon(id,clip,ammo)
	if (wpnid == CSW_KNIFE) {
		Entvars_Set_String(id, EV_SZ_viewmodel, "models/shmod/riddick_knife.mdl")
	}
}
//----------------------------------------------------------------------------------------------
public weaponChange(id)
{
	if ( !ghasRiddickPowers[id] || !shModActive() ) return

	//new clip, ammo, wpnid = get_user_weapon(id,clip,ammo)
	new wpnid = read_data(2)

	if ( wpnid == CSW_KNIFE ) switchmodel(id)
}
//----------------------------------------------------------------------------------------------