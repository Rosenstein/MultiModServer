// ROBIN! - from Batman of DC Comics.

/* CVARS - copy and paste to shconfig.cfg

//Robin
robin_level 0
robin_health 125	//default 125
robin_armor 125	//defualt 125

*/

/*
* v1.18 - vittu - 3/31/06
*       - Small code changes
*       - Removed thighpack since Batman has it and added he grenade
*
* v1.17.4 - DarkPredator - 1/17/05
*       - Updated with JTP10181 improved batman coding - DarkPredator
*       - Fixed misnamed weapon and added missing weapons - DarkPredator
*
* 5/17 - Took out ammo give to test for a bug
*        + Punisher gets unlimited ammo - so this is desired not to make
*        robin so powerful.  Batman is split between Robin and Punisher
*/

#include <amxmod>
#include <Vexd_Utilities>
#include <superheromod>

// GLOBAL VARIABLES
new HeroName[]="Robin"
new HasRobin[SH_MAXSLOTS+1]
new CurrentWeapon[SH_MAXSLOTS+1]
new MSGSetFOV

#define GiveTotal 17
new weapArray[GiveTotal][24] = {
	"weapon_hegrenade",		// First weapon in list is skipped in drop code
	"weapon_p228",
	"weapon_scout",
	"weapon_mac10",
	"weapon_aug",
	"weapon_elite",
	"weapon_fiveseven",
	"weapon_ump45",
	"weapon_sg550",
	"weapon_galil",
	"weapon_famas",
	"weapon_m249",
	"weapon_m3",
	"weapon_tmp",
	"weapon_g3sg1",
	"weapon_ak47",
	"weapon_p90"
}
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Robin", "1.18", "{AMR} Robin")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("robin_level", "0")
	register_cvar("robin_health", "125")
	register_cvar("robin_armor", "125")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	shCreateHero(HeroName, "Utility Belt Addon", "Extra Weapons and Health - Buy the Ammo or Use with Punisher", false, "robin_level")

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// INIT
	register_srvcmd("robin_init", "robin_init")
	shRegHeroInit(HeroName, "robin_init")
	
	// EVENTS
	register_event("ResetHUD", "newSpawn", "b")
	register_event("CurWeapon", "changeWeapon", "be", "1=1")

	// Let Server know about the heroes variables
	shSetMaxHealth(HeroName, "robin_health")
	shSetMaxArmor(HeroName, "robin_armor")
	shSetShieldRestrict(HeroName)

	MSGSetFOV = get_user_msgid("SetFOV")
}
//----------------------------------------------------------------------------------------------
public robin_init()
{
	// First Argument is an id
	new temp[6]
	read_argv(1, temp, 5)
	new id = str_to_num(temp)

	// 2nd Argument is 0 or 1 depending on whether the id has the hero
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)

	// Reset their shield restrict status
	// Shield restrict MUST be before weapons are given out
	if ( is_user_connected(id) )
		shResetShield(id)

	switch(hasPowers)
	{
		case true:
		{
			HasRobin[id] = true
			robin_giveweapons(id)
		}

		case false:
		{
			if ( is_user_alive(id) && HasRobin[id] )
			{
				shRemHealthPower(id)
				shRemArmorPower(id)
				robin_dropweapons(id)
			}
			HasRobin[id] = false
		}
	}
}
//----------------------------------------------------------------------------------------------
public newSpawn(id)
{
	if ( shModActive() && is_user_alive(id) && HasRobin[id] )
		set_task(0.1, "robin_giveweapons", id)
}
//----------------------------------------------------------------------------------------------
public robin_giveweapons(id)
{
	if ( !is_user_alive(id) )
		return

	for(new x = 0; x < GiveTotal; x++)
		shGiveWeapon(id, weapArray[x])

	new idTeam = get_user_team(id)
	switch(idTeam)
	{
		case 1:
			shGiveWeapon(id, "weapon_usp")
		case 2:
			shGiveWeapon(id, "weapon_glock18")
	}
}
//----------------------------------------------------------------------------------------------
public robin_dropweapons(id)
{
	if ( !is_user_alive(id) )
		return

	// Skip weapArray[0], since hegrenade can't be dropped
	for(new x = 1; x < GiveTotal; x++)
		engclient_cmd(id, "drop", weapArray[x])

	new idTeam = get_user_team(id)
	switch(idTeam)
	{
		case 1:
			engclient_cmd(id, "drop", "weapon_usp")
		case 2:
			engclient_cmd(id, "drop", "weapon_glock18")
	}

	new iCurrent = -1
	new Float:weapvel[3]

	while ( (iCurrent = FindEntity(iCurrent, "weaponbox")) > 0 )
	{
		// Skip anything not owned by this client
		if ( Entvars_Get_Edict(iCurrent, EV_ENT_owner) != id )
			continue

		// Get Weapon velocites
		Entvars_Get_Vector(iCurrent, EV_VEC_velocity, weapvel)

		// If Velocities are all Zero its on the ground already and should stay there
		if ( weapvel[0] == 0.0 && weapvel[1] == 0.0 && weapvel[2] == 0.0 )
			continue

		RemoveEntity(iCurrent)
	}
}
//----------------------------------------------------------------------------------------------
public changeWeapon(id)
{
	if ( !shModActive() || !HasRobin[id] )
		return

	new weaponid = read_data(2)

	if ( CurrentWeapon[id] != weaponid )
	{
		CurrentWeapon[id] = weaponid
		robin_zoomout(id)
	}
}
//----------------------------------------------------------------------------------------------
public robin_zoomout(id)
{
	if ( !is_user_connected(id) || !is_user_alive(id) ) return

	message_begin(MSG_ONE, MSGSetFOV, {0,0,0}, id)
	write_byte(90) //not Zooming
	message_end()
}
//----------------------------------------------------------------------------------------------
public client_connect(id)
{
	HasRobin[id] = false
}
//----------------------------------------------------------------------------------------------