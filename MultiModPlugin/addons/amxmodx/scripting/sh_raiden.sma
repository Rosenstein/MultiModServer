// Raiden - from Metal Gear Solid 2, Well Duh try guessing his poweR :p

/* CVARS - copy and paste to shconfig.cfg

//Raiden (MGS2)
raiden_level 0
raiden_health 125		//Default 125
raiden_armor 125		//Default 125
raiden_alpha 127		//Alpha value when invisible (0=completely invisible, 255=completely visible)

*/

/*
* v1.2 - vittu - 6/22/05
*      - Minor code clean up.
*
*/

#include <amxmod>
#include <superheromod>

#if defined AMX_NEW
	#include <Vexd_Utilities>
#endif

#if defined AMX98
	#include <xtrafun>
#endif

// GLOBAL VARIABLES
new gHeroName[]="Raiden (MGS2)"
new bool:gHasRaidenPower[SH_MAXSLOTS+1]
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Raiden (MGS2)", "1.2", "N4m3LesS`Jay")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("raiden_level", "0")
	register_cvar("raiden_health", "125")
	register_cvar("raiden_armor", "125")
	register_cvar("raiden_alpha", "127")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	shCreateHero(gHeroName, "Sneaking", "Less visible and no footsteps.", false, "raiden_level")

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// INIT
	register_srvcmd("raiden_init", "raiden_init")
	shRegHeroInit(gHeroName, "raiden_init")

	// EVENTS
	register_event("ResetHUD", "newSpawn", "b")

	// Let Server know about Raiden's Variables
	shSetMaxHealth(gHeroName, "raiden_health")
	shSetMaxArmor(gHeroName, "raiden_armor")
}
//----------------------------------------------------------------------------------------------
public raiden_init()
{
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id = str_to_num(temp)

	// 2nd Argument is 0 or 1 depending on whether the id has the hero
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)

	if ( is_user_alive(id) ) {
		if ( hasPowers ) {
			invisible(id)
		}
		else if ( !hasPowers && gHasRaidenPower[id] ) {
			shRemHealthPower(id)
			shRemArmorPower(id)
			visible(id)
		}
	}

#if defined AMX_NEW

	gHasRaidenPower[id] = (hasPowers != 0)
}
//----------------------------------------------------------------------------------------------
public client_prethink(id)
{
	if( gHasRaidenPower[id] ) {
		Entvars_Set_Int(id, EV_INT_flTimeStepSound, 999)
	}
}

#else

	if ( hasPowers && is_user_connected(id) ) {
		set_user_footsteps(id, 1)
	}
	else if ( !hasPowers && gHasRaidenPower[id] && is_user_connected(id) ) {
		set_user_footsteps(id, 0)
	}

	gHasRaidenPower[id] = (hasPowers != 0)
}
#endif
//----------------------------------------------------------------------------------------------
public newSpawn(id)
{
	if ( gHasRaidenPower[id] && is_user_connected(id) ) {
		set_task(1.0, "invisible", id)
		#if !defined AMX_NEW
			set_user_footsteps(id, 1)
		#endif
	}
}
//----------------------------------------------------------------------------------------------
public invisible(id)
{
	if ( !is_user_alive(id) ) return

	set_user_rendering(id, kRenderFxGlowShell, 0, 0, 0, kRenderTransAlpha, get_cvar_num("raiden_alpha") )
}
//----------------------------------------------------------------------------------------------
public visible(id)
{
	if ( !is_user_alive(id) ) return

	set_user_rendering(id)
}
//----------------------------------------------------------------------------------------------