// DOMINO! from marvel comics. Has probability-altering field which allows things to fall into place for her.

/* CVARS - copy and paste to shconfig.cfg

//Domino
domino_level 0
domino_maxmult 2.0		//Max possible damage multiplier, range 1.01 to 2.0 (Default 2.0)

*/

/*
* v1.2 - vittu - 1/27/07
*      - Small fix to make sure weapon is a gun.
*
* v1.1 - vittu - 7/18/06
*      - Small code changes, updated to amxmodx 1.70 and above.
*
*/

#include <amxmodx>
#include <superheromod>

// GLOBAL VARIABLES
new HeroName[] = "Domino"
new bool:HasDomio[SH_MAXSLOTS+1]
new PlayersLevel[SH_MAXSLOTS+1]
new CvarMaxMult
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Domino", "1.2", "vittu")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("domino_level", "0")
	CvarMaxMult = register_cvar("domino_maxmult", "2.0")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	shCreateHero(HeroName, "Even the Odds", "Do more Gun Damage to Higher Levels, the larger the difference the more damage.", false, "domino_level")

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// INIT
	register_srvcmd("domino_init", "domino_init")
	shRegHeroInit(HeroName, "domino_init")

	// DAMAGE
	register_event("Damage", "domino_damage", "b", "2!0")

	// LEVELS
	register_srvcmd("domino_levels", "domino_levels")
	shRegLevels(HeroName, "domino_levels")
}
//----------------------------------------------------------------------------------------------
public domino_init()
{
	// First Argument is an id
	new temp[6]
	read_argv(1, temp, 5)
	new id = str_to_num(temp)

	// 2nd Argument is 0 or 1 depending on whether the id has the hero
	read_argv(2, temp, 5)
	new hasPowers = str_to_num(temp)

	HasDomio[id] = (hasPowers != 0)
}
//----------------------------------------------------------------------------------------------
public domino_damage(id)
{
	if ( !shModActive() || !is_user_alive(id) )
		return

	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)

	if ( attacker <= 0 || attacker > SH_MAXSLOTS )
		return

	if ( HasDomio[attacker] && is_weapon_gun(weapon) && is_user_alive(id) && PlayersLevel[id] > PlayersLevel[attacker] )
	{
		new weaponName[32]
		new damage = read_data(2)
		new headshot = bodypart == 1 ? 1 : 0

		// Multiplier can not exceed 1.999999999... by this calculation. Not possible to devide by 0 because of above check
		new Float:multiplier = ( float(PlayersLevel[id] - PlayersLevel[attacker]) / float(PlayersLevel[id]) ) + 1.0
		new Float:maxMult = get_pcvar_float(CvarMaxMult)

		// Check to see if server set a max value possible
		if ( multiplier > maxMult )
			multiplier = maxMult

		get_weaponname(weapon, weaponName, 31)
		replace(weaponName, 31, "weapon_", "")

		// Do extra damage
		new extraDamage = floatround(damage * multiplier - damage)
		if ( extraDamage > 0 )
			shExtraDamage(id, attacker, extraDamage, weaponName, headshot)
	}
}
//----------------------------------------------------------------------------------------------
public domino_levels()
{
	new id[5]
	new lev[5]

	read_argv(1, id, 4)
	read_argv(2, lev, 4)

	PlayersLevel[str_to_num(id)] = str_to_num(lev)
}
//----------------------------------------------------------------------------------------------
bool:is_weapon_gun(weapid)
{	
	switch(weapid)
	{
		// 0 = worldspawn, aka. fall damage
		case 0, CSW_HEGRENADE, CSW_C4, CSW_KNIFE:
			return false

		default:
		{
			// Might be something else, make sure it is a cs weapon
			if ( 0 < weapid < 31 )
				return true
		}
	}

	return false
}
//----------------------------------------------------------------------------------------------