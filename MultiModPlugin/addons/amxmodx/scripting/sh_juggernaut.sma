// Juggernaut! - Like the Thing ? :)
// CVARS
// jugger_health       - default 250
// jugger_armor        - defualt 350
// jugger_level        - what level must they be for juggernaut powers?
// jugger_grenademult  - who much damage to do
// jugger_speed        - default 150 ( like walk mode )

#include <amxmod>
#include <superheromod>

// VARIABLES
new gHeroName[]="Juggernaut"
new gHasJugPower[SH_MAXSLOTS+1]
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Juggernaut", "1.14.4", "N4m3LesS`Jay")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	register_cvar("jugger_level", "7")
	register_cvar("jugger_health", "250")
	register_cvar("jugger_armor", "350")
	register_cvar("jugger_speed", "150")
	register_cvar("jugger_gravity", "2.0")
	register_cvar("jugger_grenademult", "60.9")

	// FIRE THE EVENT TO CREATE THIS SUPERHERO!
	shCreateHero(gHeroName, "Only a Juggernaut?", "Start with Para, Extra Health and Armor!", false, "jugger_level")

	// REGISTER EVENTS THIS HERO WILL RESPOND TO! (AND SERVER COMMANDS)
	// INIT
	register_srvcmd("jugger_init", "jugger_init")
	shRegHeroInit(gHeroName, "jugger_init")

	register_event("ResetHUD","newRound","b")

	// EXTRA NADE DAMAGE
	register_event("Damage", "jugger_damage", "b", "2!0")

	// Let Server know about JUGGERNAUTS Variable
	// It is possible that another hero has more hps, less gravity, or more armor
	// so rather than just setting these - let the superhero module decide each round
	shSetMaxHealth(gHeroName, "jugger_health")
	shSetMaxArmor(gHeroName, "jugger_armor")
	shSetMaxSpeed(gHeroName, "jugger_speed", "[0]")
}
//----------------------------------------------------------------------------------------------
public jugger_init()
{
	// First Argument is an id
	new temp[6]
	read_argv(1,temp,5)
	new id = str_to_num(temp)

	// 2nd Argument is 0 or 1 depending on whether the id has juggernaut
	read_argv(2,temp,5)
	new hasPowers = str_to_num(temp)

	if ( hasPowers && is_user_connected(id) ) {
		jugger_giveweapons(id)
	}
	else if ( !hasPowers && gHasJugPower[id] && is_user_alive(id) ) {
		shRemHealthPower(id)
		shRemArmorPower(id)
		shRemSpeedPower(id)
	}

	gHasJugPower[id] = (hasPowers != 0)
}
//----------------------------------------------------------------------------------------------
public newRound(id)
{
	if ( gHasJugPower[id] && is_user_alive(id) && shModActive() ) {
		set_task(0.1, "jugger_giveweapons", id)
	}
}
//----------------------------------------------------------------------------------------------
public jugger_giveweapons(id)
{
	if ( !is_user_alive(id) ) return

	shGiveWeapon(id,"weapon_m249")
	shGiveWeapon(id,"weapon_hegrenade")
	shGiveWeapon(id,"weapon_flashbang")
	shGiveWeapon(id,"weapon_smokegrenade")

	// Give CTs a Defuse Kit
	if ( get_user_team(id) == 2 ) shGiveWeapon(id,"item_thighpack")
}
//----------------------------------------------------------------------------------------------
public jugger_damage(id)
{
	if ( !shModActive() || !is_user_alive(id) ) return

	new damage = read_data(2)
	new weapon, bodypart, attacker = get_user_attacker(id, weapon, bodypart)
	new headshot = bodypart == 1 ? 1 : 0

	if ( attacker <= 0 || attacker > SH_MAXSLOTS ) return

	if ( gHasJugPower[attacker] && weapon == CSW_HEGRENADE && is_user_alive(id) ) {
		// do extra damage
		new extraDamage = floatround(damage * get_cvar_float("jugger_grenademult") - damage)
		if (extraDamage > 0) shExtraDamage( id, attacker, extraDamage, "grenade", headshot)
	}
}
//----------------------------------------------------------------------------------------------